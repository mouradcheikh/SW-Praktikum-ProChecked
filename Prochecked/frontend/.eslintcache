[{"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\index.js":"1","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\App.js":"2","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Theme.js":"3","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\AppApi\\RoleBO.js":"4","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\AppApi\\PersonBO.js":"5","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\UserView.js":"6","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\SignIn.js":"7","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\layout\\Header.js":"8","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\dialogs\\LoadingProgress.js":"9","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\dialogs\\ContextErrorMessage.js":"10","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\PersonList.js":"11","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\AppApi\\AppApi.js":"12","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\AppApi\\BusinessObject.js":"13","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\PersonListEntry.js":"14","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\dialogs\\PersonForm.js":"15","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\dialogs\\PersonDeleteDialog.js":"16","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\AppApi\\index.js":"17"},{"size":149,"mtime":1607077333800,"results":"18","hashOfConfig":"19"},{"size":9463,"mtime":1607690279355,"results":"20","hashOfConfig":"19"},{"size":1787,"mtime":1606826666305,"results":"21","hashOfConfig":"19"},{"size":449,"mtime":1607288611622,"results":"22","hashOfConfig":"19"},{"size":1633,"mtime":1607703875145,"results":"23","hashOfConfig":"19"},{"size":2654,"mtime":1607689374626,"results":"24","hashOfConfig":"19"},{"size":1553,"mtime":1606658777576,"results":"25","hashOfConfig":"19"},{"size":1295,"mtime":1607509095860,"results":"26","hashOfConfig":"19"},{"size":934,"mtime":1606658777575,"results":"27","hashOfConfig":"19"},{"size":2209,"mtime":1606658777574,"results":"28","hashOfConfig":"19"},{"size":7387,"mtime":1607692283703,"results":"29","hashOfConfig":"19"},{"size":4927,"mtime":1607691411962,"results":"30","hashOfConfig":"19"},{"size":1166,"mtime":1607537165096,"results":"31","hashOfConfig":"19"},{"size":5899,"mtime":1607645111634,"results":"32","hashOfConfig":"19"},{"size":7774,"mtime":1607638034015,"results":"33","hashOfConfig":"19"},{"size":4249,"mtime":1607638034062,"results":"34","hashOfConfig":"19"},{"size":290,"mtime":1607638248597,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"15ctbv9",{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\index.js",[],["75","76"],"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\App.js",["77","78"],"import React from 'react';\r\n\r\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\r\nimport { Container, ThemeProvider, CssBaseline } from '@material-ui/core';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\nimport PersonBO from './AppApi/PersonBO'\r\nimport RoleBO from './AppApi/RoleBO'\r\nimport AppAPI from './AppApi/AppApi'\r\nimport SignIn from './Components/pages/SignIn'; //importiere von Pages das SignIn\r\nimport UserView from './Components/pages/UserView';\r\nimport Header from './Components/layout/Header';\r\nimport LoadingProgress from './Components/dialogs/LoadingProgress';\r\nimport ContextErrorMessage from './Components/dialogs/ContextErrorMessage';\r\nimport Theme from './Theme';\r\nimport PersonList from './Components/PersonList';\r\n\r\n// import firebaseconfig from './firebaseconfig';\r\n\r\nclass App extends React.Component {\r\n\r\n    #firebaseConfig = {\r\n    \r\n        apiKey: \"AIzaSyAXRfVbXnTLoSxa_YJxTTaRckt803yV4I4\",\r\n        authDomain: \"prochecked-team09.firebaseapp.com\",\r\n        databaseURL: \"https://prochecked-team09.firebaseio.com\",\r\n        projectId: \"prochecked-team09\",\r\n        storageBucket: \"prochecked-team09.appspot.com\",\r\n        messagingSenderId: \"791050707787\",\r\n        appId: \"1:791050707787:web:f923c14b57ae697fde3ece\"\r\n    };\r\n\r\n    //Constrcutor welcher Firebase initialisiert \r\n    constructor (props) {\r\n        super(props)\r\n    \r\n\r\n    //Dann wird ein leeres state initalisiert \r\n\t    this.state = {\r\n            person: null,\r\n            appError: null,\r\n            authError: null,\r\n            authLoading: false\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromError(error) { //Hier wird der Status aktualisiert, \r\n\t\treturn { appError: error };          // dass beim nÃ¤chsten Rendern die Fallback UI angezeigt wird \r\n    }\r\n    \r\n    handleAuthStateChange = person => { // Firebase Benutzer logt sich ein, der state wechselt den Zustand \r\n\t\tif (person) {\r\n            console.log(\"handleauthstate\")\r\n\t\t\tthis.setState({\r\n\t\t\t\tauthLoading: true\r\n            });\r\n            \r\n            //die Person ist eingeloggt\r\n            person.getIdToken().then(token => {\r\n                document.cookie = `token=${token};path=/`; //pfad evtl. erweitern?\r\n            \r\n            //setzt den Nutzer auf Not bevor der Token angekommen ist \r\n                this.setState({\r\n\t\t\t\t\tperson: person,\r\n\t\t\t\t\tauthError: null,\r\n\t\t\t\t\tauthLoading: false\r\n                });\r\n                //Person aus Datenbank auslesen; wird durch SecurityDecorater reingeschrieben, falls noch nicht vorhanden\r\n                \r\n                this.getPersonByGoogleId(person.uid)\r\n                \r\n              \r\n                //this.createPerson(person.displayName, person.email, person.uid)\r\n                \r\n\r\n\r\n            }).catch(error =>{\r\n                this.setState({\r\n                    authError:error,\r\n                    authLoading: false \r\n                });\r\n            });\r\n        \r\n        } else {\r\n            document.cookie = 'token=;path=/'; //Person hat sich ausgeloggt, dann clear token\r\n            //setze die ausgeloggte Person auf null\r\n            this.setState ({\r\n                person: null,\r\n                authLoading: false \r\n            });\r\n        }\r\n    }\r\n\r\n    handleSignIn = () => {\r\n\t\tthis.setState({\r\n\t\t\tauthLoading: true\r\n\t\t});\r\n\t\tconst provider = new firebase.auth.GoogleAuthProvider(); //Erstelle Instanz des Google-Provider-Objekts\r\n\t\tfirebase.auth().signInWithRedirect(provider); // Umleiten auf die signInWithRedirect ruft signInWithRedirect auf \r\n    }\r\n\r\n\r\n\r\n    getPersons(){\r\n        var api = AppAPI.getAPI()\r\n        console.log(api)\r\n        api.getPersons().then((person) =>\r\n            {console.log(person)\r\n            this.setState({\r\n                person: person\r\n            })}\r\n            )\r\n    }\r\n\r\n    createPerson(name, email, google_id){\r\n        var api = AppAPI.getAPI()\r\n        // console.log(api)\r\n        api.createPerson(name, email, google_id).then((person) =>\r\n            {console.log(person)\r\n            console.log(\"test\")\r\n            this.setState({\r\n                person: person\r\n            })}\r\n            )\r\n        }\r\n\r\n    getPersonByGoogleId = (google_id) => {\r\n        var api = AppAPI.getAPI()\r\n        //console.log(api)\r\n        api.getPersonByGoogleId(google_id).then((person) =>\r\n            {console.log(person)\r\n                console.log(person.get)\r\n            this.setState({\r\n                person: person\r\n            })\r\n            //console.log(this.state.person)\r\n            }\r\n            )\r\n    }\r\n\r\n    setRole = (aRole) => {\r\n        const person = this.state.person\r\n        const {name, email, google_id, id, creation_date, last_updated} = person\r\n        var updatedPerson = new PersonBO(name, email, google_id, aRole)\r\n        updatedPerson.setID(id)\r\n        updatedPerson.setCreationDate(creation_date)\r\n        updatedPerson.setLastUpdated(last_updated)\r\n        var api = AppAPI.getAPI()\r\n        api.updatePerson(updatedPerson).then((newPerson) => { //bei put (updatePerson) kommt was zurÃ¼ck? kommt Ã¼berhaupt person zurÃ¼ck?\r\n                        this.setState({\r\n                            person: newPerson\r\n                        })\r\n                    })\r\n                }\r\n    \r\n    // checkIfPersonInDatabase(name, email, googleId) {\r\n    //     console.log(\"checkifuserindatabase\")\r\n    //     var api = AppAPI.getAPI()\r\n    //     console.log(api)\r\n\r\n    //     var suggestion = new PersonBO(name, email, googleId)\r\n    //                 console.log(suggestion)\r\n                    \r\n    //         api.getPersonByGoogleId(googleId).then((person) => {\r\n    //             console.log(person)\r\n    //             if (!person.getGoogleId()) {\r\n    //                 var suggestion = new PersonBO(name, email, googleId)\r\n    //                 console.log(suggestion)\r\n    //                 api.createPerson(suggestion).then((newPerson) => {\r\n    //                 this.setState({\r\n    //                     person: newPerson})\r\n    //                 }\r\n    //                 )\r\n    //             }\r\n            \r\n\r\n    //             else {\r\n    //                 this.setState({\r\n    //                     person: person\r\n    //                 })\r\n    //             }\r\n    //         }\r\n    //     )\r\n    // }\r\n\r\n    \r\n\r\n    // createPersonInDatabase(name, email, googleId) {\r\n    //     console.log(\"createPersonInDatabase\")\r\n    //     var api = AppAPI.getAPI()\r\n    //     console.log(api)\r\n\r\n    //     var suggestion = new PersonBO(name, email, googleId)\r\n    //             console.log(suggestion)\r\n    //             var suggestion = new PersonBO(name, email, googleId)\r\n    //             console.log(suggestion)\r\n    //             api.createPerson(suggestion).then((newPerson) => {\r\n    //             this.setState({\r\n    //                 person: newPerson})\r\n    //                 }  \r\n    //             )\r\n    // }\r\n\r\n    // setRoleOfPerson(person, role){\r\n    //     var api = AppAPI.getAPI()\r\n    //         updatedPerson = person.setBerechtigung(role)\r\n    //         api.update(updatedPerson).then((newPerson) => {\r\n    //             this.setState({\r\n    //                 person: newPerson\r\n    //             })\r\n    //         })\r\n    // }\r\n\r\n    \r\n        \r\n    \r\n    componentDidMount() {\r\n        firebase.initializeApp(this.#firebaseConfig);\r\n        firebase.auth().languageCode = 'en';\r\n        firebase.auth().onAuthStateChanged(this.handleAuthStateChange);\r\n        console.log(\"App gerendert\")\r\n        };\r\n    \r\n\r\n    \t/** Renders the whole app */\r\n\trender() {\r\n\t\tconst { person, appError, authError, authLoading } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<ThemeProvider theme={Theme}>\r\n\t\t\t\t<CssBaseline />\r\n\t\t\t\t<Router basename={process.env.PUBLIC_URL}>\r\n\t\t\t\t\t<Container maxWidth='md'>\r\n\t\t\t\t\t\t<Header/>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t// Ist eine Person eingeloggt?\r\n                            person ?\r\n                                        <>\r\n                                \r\n                                            <Redirect from='/' to='persons' />\r\n                                            <Route exact path='/persons'>\r\n                                                <PersonList />\r\n                                            </Route>\r\n                                            /*<Route exact path='/UserView'>\r\n                                                <UserView setRole={this.setRole}/>\r\n                                            </Route>*/\r\n                                        </>\r\n                                        :\r\n                                        // sonst zeige die SignIn Seite \r\n                                        <>\r\n                                            <Redirect to='/SignIn' />\r\n                                            <SignIn onSignIn={this.handleSignIn} />\r\n                                        </>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t<LoadingProgress show={authLoading} />\r\n\t\t\t\t\t\t<ContextErrorMessage error={authError} contextErrorMsg={`WÃ¤hrend der Anmeldung ist etwas falsch gelaufen.`} onReload={this.handleSignIn} />\r\n\t\t\t\t\t\t<ContextErrorMessage error={appError} contextErrorMsg={`Innerhalb des Programms gab es einen Fehler. Bitte die Seite erneut laden.`} />\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</Router>\r\n\t\t\t</ThemeProvider>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n// person ={this.state.person} setRoleOfPerson = {this.setRoleOfPerson} kommt in Zeile 150\r\n","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Theme.js",[],"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\AppApi\\RoleBO.js",[],"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\AppApi\\PersonBO.js",["79"],"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\UserView.js",["80","81"],"import Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n// import { Link as RouterLink } from 'react-router-dom'\r\n// import './App.css';\r\nimport React, { Component } from 'react';\r\nimport RoleBO from '../../AppApi/RoleBO'\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass UserView extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n    }\r\n\r\n    handleAdminButtonClicked = () => {\r\n      this.props.setRole(3);\r\n      this.viewRole()\r\n    }\r\n\r\n    handleStudentButtonClicked = () => {\r\n      this.props.setRole(1);\r\n      this.viewRole()\r\n    }\r\n\r\n    handleDozentButtonClicked = () => {\r\n      this.props.setRole(2);\r\n      this.viewRole()\r\n    }\r\n\r\n    viewRole= function() {\r\n      console.log(\"clicked\")\r\n    };\r\n\r\nrender () {\r\n  const { classes } = this.props;\r\n\r\n\treturn(\r\n        <div>\r\n          <center>\r\n                <h1>Bitte wÃ¤hlen Sie Ihre Rolle:</h1>\r\n                <div>\r\n                <Link to='/StudentView'>\r\n                <Button\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    onClick = {this.handleStudentButtonClicked}\r\n                >\r\n                            Student\r\n                    \r\n                </Button>\r\n                </Link>\r\n                </div>\r\n                <div>\r\n                <Link to='/DozentView'>\r\n                <Button\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    algin=\"center\"\r\n                    className={classes.button}\r\n                    onClick = {this.handleDozentButtonClicked}\r\n                    \r\n                >\r\n                            Dozent\r\n                    \r\n                </Button>\r\n                </Link>\r\n                </div>\r\n                <div>\r\n                <Link to='/AdminView'>\r\n                <Button\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    onClick = {this.handleAdminButtonClicked}\r\n                    \r\n                 >\r\n                            Admin\r\n                  \r\n                </Button>\r\n                </Link>\r\n                </div>\r\n        </center>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = (theme) => ({\r\n  button: {\r\n    margin: theme.spacing(2),\r\n    width: 170,\r\n    fontSize: 25,\r\n    padding: \"15x 0\"\r\n  },\r\n})\r\n\r\n  export default  withStyles(styles)(UserView);","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\SignIn.js",[],"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\layout\\Header.js",["82","83"],"import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SubjectIcon from '@material-ui/icons/Subject';\r\n\r\nclass Header extends React.Component {\r\n    constructor (props) {\r\n        super (props)\r\n}\r\n\r\nrender () {\r\n\r\n    const {user,classes} = this.props;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton}  aria-label=\"menu\">\r\n            <SubjectIcon/>\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n              ProChecked - Hochschule der Medien\r\n          </Typography>\r\n          <Button color=\"inherit\"></Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}}\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      width: \"100%\"\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(28),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n  })\r\n\r\nexport default withStyles(styles) (Header);\r\n","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\dialogs\\LoadingProgress.js",[],"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\dialogs\\ContextErrorMessage.js",[],"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\PersonList.js",[],"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\AppApi\\AppApi.js",[],"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\AppApi\\BusinessObject.js",[],"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\PersonListEntry.js",["84","85","86","87","88","89","90","91","92"],"import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Typography, Accordion, AccordionSummary, AccordionDetails, Grid } from '@material-ui/core';\r\nimport { Button, ButtonGroup } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport PersonForm from './dialogs/PersonForm';\r\nimport PersonDeleteDialog from './dialogs/PersonDeleteDialog';\r\n//import AccountList from './AccountList';\r\n\r\n\r\n/**\r\n * Renders a PersonBO object within a expandable/collapsible PersonListEntry with the person manipulation\r\n * functions. If expanded, it renders a AccountList.\r\n * \r\n * @see See [AccountList](#accountlist)\r\n * \r\n * @author [Christoph Kunz](https://github.com/christophkunz)\r\n */\r\nclass PersonListEntry extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Init the state\r\n    this.state = {\r\n      person: props.person,\r\n      showPersonForm: false,\r\n      showPersonDeleteDialog: false,\r\n    };\r\n  }\r\n\r\n  /** Handles onChange events of the underlying ExpansionPanel */\r\n  expansionPanelStateChanged = () => {\r\n    this.props.onExpandedStateChange(this.props.person);\r\n  }\r\n\r\n  /** Handles onAccountDelete events from an AccountListEntry  */\r\n//   deleteAccountHandler = (deletedAccount) => {\r\n//     // console.log(deletedAccount.getID());\r\n//     this.setState({\r\n//       accounts: this.state.accounts.filter(account => account.getID() !== deletedAccount.getID())\r\n//     })\r\n//   }\r\n\r\n  /** Handles the onClick event of the edit person button */\r\n  editPersonButtonClicked = (event) => {\r\n    event.stopPropagation();\r\n    this.setState({\r\n      showPersonForm: true\r\n    });\r\n  }\r\n\r\n  /** Handles the onClose event of the PersonForm */\r\n  personFormClosed = (person) => {\r\n    // person is not null and therefor changed\r\n    if (person) {\r\n      this.setState({\r\n        person: person,\r\n        showPersonForm: false\r\n      });\r\n    } else {\r\n      this.setState({\r\n        showPersonForm: false\r\n      });\r\n    }\r\n  }\r\n\r\n  /** Handles the onClick event of the delete person button */\r\n  deletePersonButtonClicked = (event) => {\r\n    event.stopPropagation();\r\n    this.setState({\r\n      showPersonDeleteDialog: true\r\n    });\r\n  }\r\n\r\n  /** Handles the onClose event of the PersonDeleteDialog */\r\n  deletePersonDialogClosed = (person) => {\r\n    // if person is not null, delete it\r\n    if (person) {\r\n      this.props.onPersonDeleted(person);\r\n    };\r\n\r\n    // DonÂ´t show the dialog\r\n    this.setState({\r\n      showPersonDeleteDialog: false\r\n    });\r\n  }\r\n\r\n  /** Renders the component */\r\n  render() {\r\n    const { classes, expandedState } = this.props;\r\n    // Use the states person\r\n    const { person, showPersonForm, showPersonDeleteDialog } = this.state;\r\n\r\n    // console.log(this.state);\r\n    return (\r\n        <div>\r\n        <Grid item>\r\n                <Typography variant='body1' className={classes.heading}>{person.getName()}\r\n                </Typography>\r\n              </Grid>\r\n              <ButtonGroup variant='text' size='small'>\r\n                  <Button color='primary' onClick={this.editPersonButtonClicked}>\r\n                    edit\r\n                  </Button>\r\n                  <Button color='secondary' onClick={this.deletePersonButtonClicked}>\r\n                    delete\r\n                  </Button>\r\n                </ButtonGroup>\r\n\r\n        </div>)\r\n\r\n      /*<div>\r\n        <Accordion defaultExpanded={false} expanded={expandedState} onChange={this.expansionPanelStateChanged}>\r\n          <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            id={`person${person.getID()}accountpanel-header`}\r\n          >\r\n            <Grid container spacing={1} justify='flex-start' alignItems='center'>\r\n              <Grid item>\r\n                <Typography variant='body1' className={classes.heading}>{person.getName()}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <ButtonGroup variant='text' size='small'>\r\n                  <Button color='primary' onClick={this.editPersonButtonClicked}>\r\n                    edit\r\n                  </Button>\r\n                  <Button color='secondary' onClick={this.deletePersonButtonClicked}>\r\n                    delete\r\n                  </Button>\r\n                </ButtonGroup>\r\n              </Grid>\r\n              <Grid item xs />\r\n              <Grid item>\r\n                <Typography variant='body2' color={'textSecondary'}>List of accounts</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <AccountList show={expandedState} person={person} />\r\n          </AccordionDetails>\r\n        </Accordion>\r\n        <PersonForm show={showPersonForm} person={person} onClose={this.personFormClosed} />\r\n        <PersonDeleteDialog show={showPersonDeleteDialog} person={person} onClose={this.deletePersonDialogClosed} />\r\n      </div>\r\n    );*/\r\n  }\r\n}\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  }\r\n});\r\n\r\n/** PropTypes */\r\nPersonListEntry.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  /** The PersonBO to be rendered */\r\n  person: PropTypes.object.isRequired,\r\n  /** The state of this PersonListEntry. If true the person is shown with its accounts */\r\n  expandedState: PropTypes.bool.isRequired,\r\n  /** The handler responsible for handle expanded state changes (exanding/collapsing) of this PersonListEntry \r\n   * \r\n   * Signature: onExpandedStateChange(PersonBO person)\r\n   */\r\n  onExpandedStateChange: PropTypes.func.isRequired,\r\n  /** \r\n   *  Event Handler function which is called after a sucessfull delete of this person.\r\n   * \r\n   * Signature: onPersonDelete(PersonBO person)\r\n   */\r\n  onPersonDeleted: PropTypes.func.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(PersonListEntry);\r\n","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\dialogs\\PersonForm.js",[],"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\dialogs\\PersonDeleteDialog.js",[],"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\AppApi\\index.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":9,"column":8,"nodeType":"99","messageId":"100","endLine":9,"endColumn":14},{"ruleId":"101","severity":1,"message":"102","line":244,"column":53,"nodeType":"103","endLine":245,"endColumn":47},{"ruleId":"97","severity":1,"message":"98","line":2,"column":8,"nodeType":"99","messageId":"100","endLine":2,"endColumn":14},{"ruleId":"97","severity":1,"message":"98","line":6,"column":8,"nodeType":"99","messageId":"100","endLine":6,"endColumn":14},{"ruleId":"104","severity":1,"message":"105","line":11,"column":5,"nodeType":"106","messageId":"107","endLine":13,"endColumn":6},{"ruleId":"104","severity":1,"message":"105","line":11,"column":5,"nodeType":"106","messageId":"107","endLine":13,"endColumn":2},{"ruleId":"97","severity":1,"message":"108","line":17,"column":12,"nodeType":"99","messageId":"100","endLine":17,"endColumn":16},{"ruleId":"97","severity":1,"message":"109","line":3,"column":34,"nodeType":"99","messageId":"100","endLine":3,"endColumn":43},{"ruleId":"97","severity":1,"message":"110","line":3,"column":45,"nodeType":"99","messageId":"100","endLine":3,"endColumn":61},{"ruleId":"97","severity":1,"message":"111","line":3,"column":63,"nodeType":"99","messageId":"100","endLine":3,"endColumn":79},{"ruleId":"97","severity":1,"message":"112","line":5,"column":8,"nodeType":"99","messageId":"100","endLine":5,"endColumn":22},{"ruleId":"97","severity":1,"message":"113","line":6,"column":8,"nodeType":"99","messageId":"100","endLine":6,"endColumn":18},{"ruleId":"97","severity":1,"message":"114","line":7,"column":8,"nodeType":"99","messageId":"100","endLine":7,"endColumn":26},{"ruleId":"97","severity":1,"message":"115","line":91,"column":22,"nodeType":"99","messageId":"100","endLine":91,"endColumn":35},{"ruleId":"97","severity":1,"message":"116","line":93,"column":21,"nodeType":"99","messageId":"100","endLine":93,"endColumn":35},{"ruleId":"97","severity":1,"message":"117","line":93,"column":37,"nodeType":"99","messageId":"100","endLine":93,"endColumn":59},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'RoleBO' is defined but never used.","Identifier","unusedVar","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'user' is assigned a value but never used.","'Accordion' is defined but never used.","'AccordionSummary' is defined but never used.","'AccordionDetails' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'PersonForm' is defined but never used.","'PersonDeleteDialog' is defined but never used.","'expandedState' is assigned a value but never used.","'showPersonForm' is assigned a value but never used.","'showPersonDeleteDialog' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]