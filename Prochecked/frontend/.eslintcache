[{"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\index.js":"1","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\App.js":"2","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Theme.js":"3","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\AppApi\\PersonBO.js":"4","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\AppApi\\RoleBO.js":"5","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\AppApi\\AppApi.js":"6","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\StudentenView.js":"7","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\UserView.js":"8","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\SignIn.js":"9","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\layout\\Header.js":"10","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\dialogs\\ContextErrorMessage.js":"11","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\dialogs\\LoadingProgress.js":"12","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\DozentView.js":"13","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\AdminView.js":"14","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\PersonLoggedIn.js":"15","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\AppApi\\BusinessObject.js":"16","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\AppApi\\ParticipationBO.js":"17","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\AppApi\\ProjectBO.js":"18","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\AppApi\\index.js":"19","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\ProjectList.js":"20","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\dialogs\\ProjectForm.js":"21","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\ProjectListEntry.js":"22","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\dialogs\\ProjectDeleteDialog.js":"23","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\ProjektErstellen.js":"24","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\ParticipationList.js":"25","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\ParticipationListEntry.js":"26","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\AppApi\\StudentBO.js":"27"},{"size":149,"mtime":1607077333800,"results":"28","hashOfConfig":"29"},{"size":12316,"mtime":1608054365039,"results":"30","hashOfConfig":"29"},{"size":1787,"mtime":1606826666305,"results":"31","hashOfConfig":"29"},{"size":1633,"mtime":1607704135487,"results":"32","hashOfConfig":"29"},{"size":449,"mtime":1607288611622,"results":"33","hashOfConfig":"29"},{"size":7220,"mtime":1608054613416,"results":"34","hashOfConfig":"29"},{"size":180,"mtime":1607266073628,"results":"35","hashOfConfig":"29"},{"size":2654,"mtime":1607885892612,"results":"36","hashOfConfig":"29"},{"size":1553,"mtime":1606658777576,"results":"37","hashOfConfig":"29"},{"size":1295,"mtime":1607509095860,"results":"38","hashOfConfig":"29"},{"size":2209,"mtime":1606658777574,"results":"39","hashOfConfig":"29"},{"size":934,"mtime":1606658777575,"results":"40","hashOfConfig":"29"},{"size":4211,"mtime":1607987430558,"results":"41","hashOfConfig":"29"},{"size":467,"mtime":1607881878923,"results":"42","hashOfConfig":"29"},{"size":3089,"mtime":1608054365086,"results":"43","hashOfConfig":"29"},{"size":1166,"mtime":1607537165096,"results":"44","hashOfConfig":"29"},{"size":1716,"mtime":1608038608491,"results":"45","hashOfConfig":"29"},{"size":2244,"mtime":1608035811270,"results":"46","hashOfConfig":"29"},{"size":290,"mtime":1607704135491,"results":"47","hashOfConfig":"29"},{"size":7668,"mtime":1608054365107,"results":"48","hashOfConfig":"29"},{"size":7930,"mtime":1607950588762,"results":"49","hashOfConfig":"29"},{"size":6073,"mtime":1608054808137,"results":"50","hashOfConfig":"29"},{"size":4282,"mtime":1607773792603,"results":"51","hashOfConfig":"29"},{"size":6357,"mtime":1608054365126,"results":"52","hashOfConfig":"29"},{"size":5608,"mtime":1608054566513,"results":"53","hashOfConfig":"29"},{"size":7381,"mtime":1608052816408,"results":"54","hashOfConfig":"29"},{"size":1334,"mtime":1608038608493,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"15ctbv9",{"filePath":"59","messages":"60","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"58"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"58"},"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\index.js",[],["121","122"],"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\App.js",["123","124","125","126","127","128"],"import React from 'react';\r\n\r\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\r\nimport { Container, ThemeProvider, CssBaseline } from '@material-ui/core';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\nimport PersonBO from './AppApi/PersonBO'\r\nimport RoleBO from './AppApi/RoleBO'\r\nimport AppAPI from './AppApi/AppApi'\r\nimport SignIn from './Components/pages/SignIn'; //importiere von Pages das SignIn\r\nimport UserView from './Components/pages/UserView';\r\nimport Header from './Components/layout/Header';\r\nimport LoadingProgress from './Components/dialogs/LoadingProgress';\r\nimport ContextErrorMessage from './Components/dialogs/ContextErrorMessage';\r\nimport Theme from './Theme';\r\n// import PersonList from './Components/PersonList';\r\nimport StudentenView from './Components/pages/StudentenView';\r\nimport DozentView from './Components/pages/DozentView';\r\nimport AdminView from './Components/pages/AdminView';\r\nimport PersonLoggedIn from './Components/pages/PersonLoggedIn';\r\nimport ProjektFormular from './Components/pages/ProjektErstellen'\r\nimport ProjectList from './Components/pages/ProjectList';\r\n\r\n// import firebaseconfig from './firebaseconfig';\r\n\r\nclass App extends React.Component {\r\n\r\n    #firebaseConfig = {\r\n    \r\n        apiKey: \"AIzaSyAXRfVbXnTLoSxa_YJxTTaRckt803yV4I4\",\r\n        authDomain: \"prochecked-team09.firebaseapp.com\",\r\n        databaseURL: \"https://prochecked-team09.firebaseio.com\",\r\n        projectId: \"prochecked-team09\",\r\n        storageBucket: \"prochecked-team09.appspot.com\",\r\n        messagingSenderId: \"791050707787\",\r\n        appId: \"1:791050707787:web:f923c14b57ae697fde3ece\"\r\n    };\r\n\r\n    //Constrcutor welcher Firebase initialisiert \r\n    constructor (props) {\r\n        super(props)\r\n    \r\n\r\n    //Dann wird ein leeres state initalisiert \r\n\t    this.state = {\r\n            person: null,\r\n            appError: null,\r\n            authError: null,\r\n            authLoading: false\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromError(error) { //Hier wird der Status aktualisiert, \r\n\t\treturn { appError: error };          // dass beim nächsten Rendern die Fallback UI angezeigt wird \r\n    }\r\n    \r\n    handleAuthStateChange = person => { // Firebase Benutzer logt sich ein, der state wechselt den Zustand \r\n\t\tif (person) {\r\n            console.log(\"handleauthstate\")\r\n\t\t\tthis.setState({\r\n\t\t\t\tauthLoading: true\r\n            });\r\n            \r\n            //die Person ist eingeloggt\r\n            person.getIdToken().then(token => {\r\n                document.cookie = `token=${token};path=/`; //pfad evtl. erweitern?\r\n            \r\n            //setzt den Nutzer auf Not bevor der Token angekommen ist \r\n                this.setState({\r\n\t\t\t\t\tperson: person,\r\n\t\t\t\t\tauthError: null,\r\n\t\t\t\t\tauthLoading: false\r\n                });\r\n                //Person aus Datenbank auslesen; wird durch SecurityDecorater reingeschrieben, falls noch nicht vorhanden\r\n                \r\n                this.getPersonByGoogleId(person.uid)\r\n                \r\n              \r\n                //this.createPerson(person.displayName, person.email, person.uid)\r\n                \r\n\r\n\r\n            }).catch(error =>{\r\n                this.setState({\r\n                    authError:error,\r\n                    authLoading: false \r\n                });\r\n            });\r\n        \r\n        } else {\r\n            document.cookie = 'token=;path=/'; //Person hat sich ausgeloggt, dann clear token\r\n            //setze die ausgeloggte Person auf null\r\n            this.setState ({\r\n                person: null,\r\n                authLoading: false \r\n            });\r\n        }\r\n    }\r\n\r\n    handleSignIn = () => {\r\n\t\tthis.setState({\r\n\t\t\tauthLoading: true\r\n\t\t});\r\n\t\tconst provider = new firebase.auth.GoogleAuthProvider(); //Erstelle Instanz des Google-Provider-Objekts\r\n\t\tfirebase.auth().signInWithRedirect(provider); // Umleiten auf die signInWithRedirect ruft signInWithRedirect auf \r\n    }\r\n\r\n\r\n\r\n    getPersons(){\r\n        var api = AppAPI.getAPI()\r\n        console.log(api)\r\n        api.getPersons().then((person) =>\r\n            {console.log(person)\r\n            this.setState({\r\n                person: person\r\n            })}\r\n            )\r\n    }\r\n\r\n    createPerson(name, email, google_id){\r\n        var api = AppAPI.getAPI()\r\n        // console.log(api)\r\n        api.createPerson(name, email, google_id).then((person) =>\r\n            {console.log(person)\r\n            console.log(\"test\")\r\n            this.setState({\r\n                person: person\r\n            })}\r\n            )\r\n        }\r\n\r\n    getPersonByGoogleId = (google_id) => {\r\n        var api = AppAPI.getAPI()\r\n        //console.log(api)\r\n        api.getPersonByGoogleId(google_id).then((person) =>\r\n            {console.log(person)\r\n            this.setState({\r\n                person: person\r\n            })\r\n            })\r\n    }\r\n\r\n    setRole = (aRole) => {\r\n        const person = this.state.person\r\n        const {name, email, google_id, id, creation_date, last_updated} = person\r\n        var updatedPerson = new PersonBO(name, email, google_id, aRole)\r\n        updatedPerson.setID(id)\r\n        updatedPerson.setCreationDate(creation_date)\r\n        updatedPerson.setLastUpdated(last_updated)\r\n        var api = AppAPI.getAPI()\r\n        api.updatePerson(updatedPerson).then((newPerson) => { //bei put (updatePerson) kommt was zurück? kommt überhaupt person zurück?\r\n                        this.setState({\r\n                            person: newPerson\r\n                        })\r\n                    })\r\n                }\r\n\r\n    getBerechtigung = () => {\r\n        const person = this.state.person\r\n        const {name, berechtigung} = person\r\n        return (berechtigung)\r\n    }\r\n    \r\n    // checkIfPersonInDatabase(name, email, googleId) {\r\n    //     console.log(\"checkifuserindatabase\")\r\n    //     var api = AppAPI.getAPI()\r\n    //     console.log(api)\r\n\r\n    //     var suggestion = new PersonBO(name, email, googleId)\r\n    //                 console.log(suggestion)\r\n                    \r\n    //         api.getPersonByGoogleId(googleId).then((person) => {\r\n    //             console.log(person)\r\n    //             if (!person.getGoogleId()) {\r\n    //                 var suggestion = new PersonBO(name, email, googleId)\r\n    //                 console.log(suggestion)\r\n    //                 api.createPerson(suggestion).then((newPerson) => {\r\n    //                 this.setState({\r\n    //                     person: newPerson})\r\n    //                 }\r\n    //                 )\r\n    //             }\r\n            \r\n\r\n    //             else {\r\n    //                 this.setState({\r\n    //                     person: person\r\n    //                 })\r\n    //             }\r\n    //         }\r\n    //     )\r\n    // }\r\n\r\n    \r\n\r\n    // createPersonInDatabase(name, email, googleId) {\r\n    //     console.log(\"createPersonInDatabase\")\r\n    //     var api = AppAPI.getAPI()\r\n    //     console.log(api)\r\n\r\n    //     var suggestion = new PersonBO(name, email, googleId)\r\n    //             console.log(suggestion)\r\n    //             var suggestion = new PersonBO(name, email, googleId)\r\n    //             console.log(suggestion)\r\n    //             api.createPerson(suggestion).then((newPerson) => {\r\n    //             this.setState({\r\n    //                 person: newPerson})\r\n    //                 }  \r\n    //             )\r\n    // }\r\n\r\n    // setRoleOfPerson(person, role){\r\n    //     var api = AppAPI.getAPI()\r\n    //         updatedPerson = person.setBerechtigung(role)\r\n    //         api.update(updatedPerson).then((newPerson) => {\r\n    //             this.setState({\r\n    //                 person: newPerson\r\n    //             })\r\n    //         })\r\n    // }\r\n    \r\n\r\n            \r\n\r\n        \r\n    \r\n    componentDidMount() {\r\n        firebase.initializeApp(this.#firebaseConfig);\r\n        firebase.auth().languageCode = 'en';\r\n        firebase.auth().onAuthStateChanged(this.handleAuthStateChange);\r\n        console.log(\"App gerendert\")\r\n        };\r\n    \r\n\r\n    \t/** Renders the whole app */\r\n\trender() {\r\n        const { person, appError, authError, authLoading } = this.state;\r\n        \r\n        // let page\r\n        // let berechtigung = person.getBerechtigung()\r\n        // if (berechtigung === 1){\r\n        //     page = <> \r\n        //             <Redirect from='/' to='StudentenView' />\r\n        //             <Route exact path='/StudentenView'>\r\n        //             <StudentenView/>\r\n        //             </Route>\r\n        //             </>\r\n        // }\r\n        // else if (berechtigung === 2){\r\n        //     page = <>\t\r\n        //             <Redirect from='/' to='DozentView' />\r\n        //             <Route exact path='/DozentView'>\r\n        //             <DozentView/>\r\n        //             </Route> \r\n        //             </>\r\n        // }\r\n        // else if (berechtigung === 3){\r\n        //     page = <>\t\r\n        //             <Redirect from='/' to='AdminView' />\r\n        //             <Route exact path='/AdminView'>\r\n        //             <AdminView/>\r\n        //             </Route>\r\n        //            </>\r\n        // }\r\n        // else {\r\n        //     page = <>\r\n        //             <Redirect from='/' to='UserView' />\r\n        //             <Route exact path='/UserView'>\r\n        //             <UserView setRole={this.setRole}/>\r\n        //             </Route>\r\n        //             </>;\r\n        // }\r\n\r\n\t\treturn (\r\n\t\t\t<ThemeProvider theme={Theme}>\r\n\t\t\t\t<CssBaseline />\r\n\t\t\t\t<Router basename={process.env.PUBLIC_URL}>\r\n\t\t\t\t\t<Container maxWidth='md'>\r\n\t\t\t\t\t\t<Header/>\r\n                        <Route exact path = '/CreateProject' component = {ProjektFormular}/>\r\n                        <Route exact path = '/ProjectList' component = {ProjectList}/>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t// Ist eine Person eingeloggt?\r\n                           person ?\r\n                                <PersonLoggedIn berechtigung = {this.state.person.berechtigung} person = {this.state.person} setRole = {this.setRole}></PersonLoggedIn>\r\n\r\n                                \r\n\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t// sonst zeige die SignIn Seite \r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<Redirect to='/SignIn' />\r\n\t\t\t\t\t\t\t\t\t<SignIn onSignIn={this.handleSignIn} />\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t<LoadingProgress show={authLoading} />\r\n\t\t\t\t\t\t<ContextErrorMessage error={authError} contextErrorMsg={`Während der Anmeldung ist etwas falsch gelaufen.`} onReload={this.handleSignIn} />\r\n\t\t\t\t\t\t<ContextErrorMessage error={appError} contextErrorMsg={`Innerhalb des Programms gab es einen Fehler. Bitte die Seite erneut laden.`} />\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</Router>\r\n\t\t\t</ThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default App;\r\n\r\n// person ={this.state.person} setRoleOfPerson = {this.setRoleOfPerson} kommt in Zeile 150\r\n\r\n\r\n\r\n// UserAbfrage(person) {\r\n//     const userType = person.getBerechtigung();\r\n//     console.log(\"UseerAbfrage\")\r\n//     return (\r\n\r\n//     <div>\r\n//             {(() => {\r\n\r\n//             if (userType === 1) {\r\n//                 console.log(\"StudentenAbfrage\")\r\n//             return (\r\n//                 <>\t<Redirect from='/' to='StudentenView' />\r\n//                     <Route exact path='/StudentenView'>\r\n//                     <StudentenView/>\r\n//                     </Route>\r\n//                 </>\r\n//             )\r\n//             } else if (userType === 2) {\r\n//             return (\r\n//                 <>\t<Redirect from='/' to='DozentView' />\r\n//                     <Route exact path='/DozentView'>\r\n//                     <DozentView/>\r\n//                     </Route>\r\n//                 </>\r\n//             )\r\n//             } else if (userType === 3) {\r\n//                 return (\r\n//                 <>\t<Redirect from='/' to='AdminView' />\r\n//                     <Route exact path='/AdminView'>\r\n//                     <AdminView/>\r\n//                     </Route>\r\n//                 </>\r\n//                 )\r\n//             } else {\r\n//                 return (\r\n//                 <>\r\n//                     <Redirect from='/' to='UserView' />\r\n//                     <Route exact path='/UserView'>\r\n//                         <UserView setRole={this.setRole}/>\r\n//                     </Route>\r\n//                 </>\r\n//             )\r\n//             }\r\n//         })()}\r\n//     <div/>\r\n// );\r\n// }\r\n","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Theme.js",[],"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\AppApi\\PersonBO.js",["129"],"import BusinessObject from './BusinessObject';\r\nimport RoleBO from './RoleBO'\r\n\r\n/**\r\n * Represents a person of the system\r\n */\r\nexport default class PersonBO extends BusinessObject {\r\n\r\n  /**\r\n   * Constructs a PersonBO object with a given name, email, google id and role\r\n   * \r\n   * @param {String} aname - the name of this PersonBO.\r\n   */\r\n  constructor(aname, aemail, agoogleid, aberechtigung) {\r\n    super();\r\n    this.name = aname\r\n    this.email = aemail\r\n    this.google_id = agoogleid\r\n    this.berechtigung = aberechtigung\r\n  }\r\n\r\n  /**\r\n   * Sets a new name\r\n   * \r\n   * @param {String} aname - the new name of this PersonBO.\r\n   */\r\n  setName(aname) {\r\n    this.name = aname\r\n  }\r\n\r\n  /**\r\n   * Gets the name.\r\n   */\r\n  getName() {\r\n    return this.name\r\n  }\r\n\r\n  setEmail(aemail){\r\n    this.email = aemail\r\n  }\r\n\r\n  getEmail(){\r\n    return this.email\r\n  }\r\n\r\n  setGoogleId(agoogleid){\r\n    this.google_id = agoogleid\r\n  }\r\n\r\n  getGoogleId(){\r\n    return this.google_id\r\n  }\r\n\r\n  setBerechtigung(aberechtigung){\r\n    this.berechtigung = aberechtigung\r\n  }\r\n\r\n  getBerechtigung(){\r\n    return this.berechtigung\r\n  }\r\n\r\n  /** \r\n   * Returns an Array of PersonBOs from a given JSON structure.\r\n   */\r\n  static fromJSON(persons) {\r\n    let result = [];\r\n\r\n    if (Array.isArray(persons)) {\r\n      persons.forEach((p) => {\r\n        Object.setPrototypeOf(p, PersonBO.prototype);\r\n        result.push(p);\r\n      })\r\n    } else {\r\n      // Es handelt sich offenbar um ein singuläres Objekt\r\n      let p = persons;\r\n      Object.setPrototypeOf(p, PersonBO.prototype);\r\n      result.push(p);\r\n    }\r\n\r\n    return result;\r\n  }\r\n}","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\AppApi\\RoleBO.js",[],"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\AppApi\\AppApi.js",[],"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\StudentenView.js",[],"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\UserView.js",["130","131"],"import Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n// import { Link as RouterLink } from 'react-router-dom'\r\n// import './App.css';\r\nimport React, { Component } from 'react';\r\nimport RoleBO from '../../AppApi/RoleBO'\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass UserView extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n    }\r\n\r\n    handleAdminButtonClicked = () => {\r\n      this.props.setRole(3);\r\n      this.viewRole()\r\n    }\r\n\r\n    handleStudentButtonClicked = () => {\r\n      this.props.setRole(1);\r\n      this.viewRole()\r\n    }\r\n\r\n    handleDozentButtonClicked = () => {\r\n      this.props.setRole(2);\r\n      this.viewRole()\r\n    }\r\n\r\n    viewRole= function() {\r\n      console.log(\"clicked\")\r\n    };\r\n\r\nrender () {\r\n  const { classes } = this.props;\r\n\r\n\treturn(\r\n        <div>\r\n          <center>\r\n                <h1>Bitte wählen Sie Ihre Rolle:</h1>\r\n                <div>\r\n                <Link to='/StudentView'>\r\n                <Button\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    onClick = {this.handleStudentButtonClicked}\r\n                >\r\n                            Student\r\n                    \r\n                </Button>\r\n                </Link>\r\n                </div>\r\n                <div>\r\n                <Link to='/DozentView'>\r\n                <Button\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    algin=\"center\"\r\n                    className={classes.button}\r\n                    onClick = {this.handleDozentButtonClicked}\r\n                    \r\n                >\r\n                            Dozent\r\n                    \r\n                </Button>\r\n                </Link>\r\n                </div>\r\n                <div>\r\n                <Link to='/AdminView'>\r\n                <Button\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    onClick = {this.handleAdminButtonClicked}\r\n                    \r\n                 >\r\n                            Admin\r\n                  \r\n                </Button>\r\n                </Link>\r\n                </div>\r\n        </center>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = (theme) => ({\r\n  button: {\r\n    margin: theme.spacing(2),\r\n    width: 170,\r\n    fontSize: 25,\r\n    padding: \"15x 0\"\r\n  },\r\n})\r\n\r\n  export default  withStyles(styles)(UserView);","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\SignIn.js",[],"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\layout\\Header.js",["132","133"],"import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SubjectIcon from '@material-ui/icons/Subject';\r\n\r\nclass Header extends React.Component {\r\n    constructor (props) {\r\n        super (props)\r\n}\r\n\r\nrender () {\r\n\r\n    const {user,classes} = this.props;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton}  aria-label=\"menu\">\r\n            <SubjectIcon/>\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n              ProChecked - Hochschule der Medien\r\n          </Typography>\r\n          <Button color=\"inherit\"></Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}}\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      width: \"100%\"\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(28),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n  })\r\n\r\nexport default withStyles(styles) (Header);\r\n","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\dialogs\\ContextErrorMessage.js",[],"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\dialogs\\LoadingProgress.js",[],"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\DozentView.js",["134","135","136","137","138","139","140"],"import Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n// import { Link as RouterLink } from 'react-router-dom'\r\n//import './App.css';\r\nimport React, { Component } from 'react';\r\n// import RoleBO from '../../AppApi/RoleBO'\r\nimport {Link} from 'react-router-dom';\r\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\r\nimport ProjectList from './ProjectList';\r\nimport ProjektFormular from './ProjektErstellen'\r\nimport UserView from './UserView'\r\n\r\n\r\n\r\n\r\n\r\n// function DozentenView(props) {\r\nclass DozentenView extends Component{\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return(<div>\r\n      <center>\r\n        <div>\r\n            <h1>Wählen Sie einen der folgenden Optionen aus:</h1>\r\n            <Link to = '/CreateProject'>\r\n            <Button\r\n                size=\"large\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                // onClick = {this.handleProjektErstellen}\r\n            >\r\n                        Projekt erstellen\r\n                \r\n            </Button>\r\n            </Link>\r\n        </div>\r\n            \r\n            <div>            \r\n\r\n            <Link to={{\r\n            pathname: '/ProjectList',\r\n            state: { linkState: this.props.person }\r\n            }}>\r\n           <Button\r\n                size=\"large\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                algin=\"center\"\r\n                className={classes.button}\r\n                // person={classes.person}\r\n                \r\n                // person={this.props.person}\r\n                // onClick = {this.viewTest2()}\r\n                > \r\n                    Bewertung und Teilnehmerpflege\r\n            </Button>\r\n            </Link>\r\n            \r\n            \r\n            </div>\r\n    </center>\r\n  </div>\r\n); \r\n\r\n}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n  // const { classes } = props;\r\n\r\n//   if (this.state.redirect === \"projekterstellen\"){\r\n//       return(\r\n//             <> \r\n//             <Route path='/CreateProject' render={ProjektFormular}>\r\n//             </Route>\r\n//             </> \r\n//       )\r\n//   }\r\n//   else if (this.state.redirect === \"bewertung\"){\r\n//       return(\r\n//         <> \r\n//             <Redirect from='/' to='ProjectList'/>\r\n//             <Route exact path='/ProjectList'>\r\n//             <ProjectList person = {this.props.person}/>\r\n//             </Route>\r\n//             </>\r\n//       )\r\n//   }\r\n// }\r\n\r\n\t// return(\r\n  //       <div>\r\n  //         <center>\r\n  //           <div>\r\n  //               <h1>Wählen Sie einen der folgenden Optionen aus:</h1>\r\n  //               <Link to = '/CreateProject'>\r\n  //               <Button\r\n  //                   size=\"large\"\r\n  //                   variant=\"contained\"\r\n  //                   color=\"primary\"\r\n  //                   className={classes.button}\r\n  //                   // onClick = {this.handleProjektErstellen}\r\n  //               >\r\n  //                           Projekt erstellen\r\n                    \r\n  //               </Button>\r\n  //               </Link>\r\n  //           </div>\r\n                \r\n  //               <div>\r\n\r\n\r\n  //               <Link to = '/ProjectList'>\r\n  //               <Button\r\n  //                   size=\"large\"\r\n  //                   variant=\"contained\"\r\n  //                   color=\"primary\"\r\n  //                   algin=\"center\"\r\n  //                   className={classes.button}\r\n  //                   // person={classes.person}\r\n                    \r\n  //                   // person={this.props.person}\r\n  //                   // onClick = {this.handleBewertung}\r\n  //                   onClick = {props.viewTest2()}\r\n  //               >\r\n  //                           Bewertung und Teilnehmerpflege\r\n  //               </Button>\r\n  //               </Link>\r\n  //               </div>\r\n  //       </center>\r\n  //     </div>\r\n  //   );\r\n  // }\r\n\r\n\r\nconst styles = (theme) => ({\r\n  button: {\r\n    margin: theme.spacing(2),\r\n    width: 285,\r\n    fontSize: 25,\r\n    padding: \"15x 0\"\r\n  },\r\n})\r\n\r\n  export default withStyles(styles)(DozentenView);\r\n\r\n","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\AdminView.js",["141","142"],"import React, { Component } from 'react';\r\n// function AdminView(){\r\n//     return( \r\n//         <div>\r\n//             <h1> AdminView </h1>\r\n//         </div>\r\n//     );\r\n// }\r\n// export default AdminView;\r\n\r\nclass AdminView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() { \r\n        return ( \r\n        <div>\r\n            <h1> AdminView </h1>\r\n        </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default AdminView; \r\n\r\n\r\n","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\PersonLoggedIn.js",["143","144"],"import React, { Component } from 'react';\r\nimport StudentenView from './StudentenView'\r\nimport AdminView from './AdminView'\r\nimport DozentView from './DozentView'\r\nimport UserView from './UserView'\r\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\r\n\r\n\r\n\r\nclass PersonLoggedIn extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() \r\n    { \r\n        let page\r\n        let berechtigung = this.props.berechtigung\r\n        if (berechtigung === 1){\r\n            page = <> \r\n                    <Redirect from='/' to='StudentenView' />\r\n                    <Route exact path='/StudentenView'>\r\n                    <StudentenView/>\r\n                    </Route>\r\n                    </>\r\n        }\r\n        else if (berechtigung === 2){\r\n            page = <>\t\r\n                    <Redirect from='/' to='DozentView' />\r\n                    <Route exact path='/DozentView'>\r\n                    <DozentView person={this.props.person}></DozentView>\r\n                    </Route> \r\n                    </>\r\n        }\r\n        else if (berechtigung === 3){\r\n            page = <>\t\r\n                    <Redirect from='/' to='AdminView' />\r\n                    <Route exact path='/AdminView'>\r\n                    <AdminView/>\r\n                    </Route>\r\n                   </>\r\n        }\r\n        else {\r\n            page = <>\r\n                    <Redirect from='/' to='UserView' />\r\n                    <Route exact path='/UserView'>\r\n                    <UserView setRole={this.props.setRole}/>\r\n                    </Route>\r\n                    </>;\r\n        }\r\n        return(\r\n            <div>\r\n                {page}\r\n            </div>\r\n            \r\n            )\r\n         ;\r\n    }\r\n}\r\n \r\nexport default PersonLoggedIn; \r\n\r\n\r\n// let page\r\n        // let berechtigung = person.getBerechtigung()\r\n        // if (berechtigung === 1){\r\n        //     page = <> \r\n        //             <Redirect from='/' to='StudentenView' />\r\n        //             <Route exact path='/StudentenView'>\r\n        //             <StudentenView/>\r\n        //             </Route>\r\n        //             </>\r\n        // }\r\n        // else if (berechtigung === 2){\r\n        //     page = <>\t\r\n        //             <Redirect from='/' to='DozentView' />\r\n        //             <Route exact path='/DozentView'>\r\n        //             <DozentView/>\r\n        //             </Route> \r\n        //             </>\r\n        // }\r\n        // else if (berechtigung === 3){\r\n        //     page = <>\t\r\n        //             <Redirect from='/' to='AdminView' />\r\n        //             <Route exact path='/AdminView'>\r\n        //             <AdminView/>\r\n        //             </Route>\r\n        //            </>\r\n        // }\r\n        // else {\r\n        //     page = <>\r\n        //             <Redirect from='/' to='UserView' />\r\n        //             <Route exact path='/UserView'>\r\n        //             <UserView setRole={this.setRole}/>\r\n        //             </Route>\r\n        //             </>;\r\n        // }","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\AppApi\\BusinessObject.js",[],"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\AppApi\\ParticipationBO.js",[],"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\AppApi\\ProjectBO.js",[],"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\AppApi\\index.js",[],"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\ProjectList.js",[],"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\dialogs\\ProjectForm.js",[],"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\ProjectListEntry.js",[],"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\dialogs\\ProjectDeleteDialog.js",[],"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\ProjektErstellen.js",["145","146","147"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n// import FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { Button } from '@material-ui/core';\r\n// import FormLabel from '@material-ui/core/FormLabel';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    width: \"50%\",\r\n  },\r\n  text: {\r\n    margin: theme.spacing(0),\r\n    width: \"100%\",\r\n  }\r\n}));\r\n\r\nfunction ProjektFormular(props) {\r\n  const classes = useStyles();\r\n  const [ProjektArt, setProjektArt] = React.useState('');\r\n  const [Professor, setProfesor] = React.useState('');\r\n  const [Titel, setProjektTitel] = React.useState('');\r\n  const [Kapazität,setKapazität] = React.useState('');\r\n  const [Inhalt, setInhalt] = React.useState('');\r\n  const [Raum, setRaum] = React.useState('');\r\n  \r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleProjektArt = (event) => {\r\n    setProjektArt(event.target.value);\r\n  };\r\n\r\n  const handleProfessor = (event) => {\r\n    setProfesor(event.target.value);\r\n  }\r\n\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(\r\n      'ProjektArt:', ProjektArt, \r\n      'Titel:', Titel,\r\n      'Kapazität:', Kapazität,\r\n      'Inhalt:', Inhalt,\r\n      'Raum:', Raum);\r\n  }\r\n\r\n  // ProfList = () => {\r\n  //   const profs = props.ProfList\r\n\r\n  // }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <h1>Geben Sie die Daten für das neue Projekt an:</h1>\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel id=\"artProjekt\">Art des Projekts</InputLabel>\r\n            <Select\r\n              labelId=\"artProjekt\"\r\n              id=\"ProjektArt\"\r\n              value={ProjektArt}\r\n              onChange={handleProjektArt}\r\n              native\r\n            >\r\n              <option value={1}>Fachspezifisches Projekt</option>\r\n              <option value={2}>Interdisziplinäres Projekt</option>\r\n              <option value={3}>Transdisziplinäres Projekt</option>\r\n\r\n              </Select>\r\n        </FormControl>\r\n      </div>\r\n          <div><TextField className={classes.formControl}\r\n            id=\"titelProjekt\" \r\n            label=\"Titel des Projekts\" \r\n            variant=\"outlined\"\r\n            value={Titel}\r\n            onInput={e=>setProjektTitel(e.target.value)}\r\n            />\r\n            \r\n          </div>\r\n          <div><TextField className={classes.formControl}\r\n            id=\"maxTeilnehmer\"\r\n            label=\"Kapazität (Max. Teilnehmerzahl)\" \r\n            variant=\"outlined\" \r\n            value={Kapazität}\r\n            onInput={e=>setKapazität(e.target.value)}\r\n            />\r\n            \r\n          </div>\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id=\"artProjekt\">weitere Betreuende(r) ProfessorInnen</InputLabel>\r\n              <Select\r\n                labelId=\"artProjekt\"\r\n                id=\"ProjektArt\"\r\n                value={Professor}\r\n                onChange={handleProfessor}\r\n                native\r\n              >\r\n              <option value={1}>prof</option>\r\n              </Select>\r\n            </FormControl>\r\n                <div><TextField className={classes.formControl}\r\n                    id=\"Inhalt\"\r\n                    label=\"Inhalt(Kurzbeschreibung):\"\r\n                    multiline\r\n                    rows={6} \r\n                    variant=\"outlined\" \r\n                    value={Inhalt}\r\n                    onInput={e=>setInhalt(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div><TextField className={classes.formControl}\r\n                    id=\"Raum\"\r\n                    label=\"Raum-/Ressourcenplanung\" \r\n                    variant=\"outlined\" \r\n                    value={Raum}\r\n                    onInput={e=>setRaum(e.target.value)}\r\n                    />\r\n               </div>\r\n              <div>\r\n                <FormControlLabel\r\n                value=\"\"\r\n                control={<Checkbox color=\"primary\" />}\r\n                label=\"Wöchentliche Termine\"\r\n                labelPlacement=\"end\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <FormControlLabel\r\n                value=\"\"\r\n                control={<Checkbox color=\"primary\" />}\r\n                label=\"Blocktage vor Beginn der Vorlesungszeit \"\r\n                labelPlacement=\"end\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <FormControlLabel\r\n                value=\"\"\r\n                control={<Checkbox color=\"primary\" />}\r\n                label=\"Blocktage in der Prüfungszeit (nur inter-/trans. Projekte)\"\r\n                labelPlacement=\"end\"\r\n                />\r\n            </div>\r\n            <div>\r\n                <FormControlLabel\r\n                value=\"\"\r\n                control={<Checkbox color=\"primary\" />}\r\n                label=\"Blocktage (Samstage) in der Vorlesungszeit\"\r\n                labelPlacement=\"end\"\r\n                />\r\n            </div>\r\n            <div>\r\n                <FormControlLabel\r\n                value=\"\"\r\n                control={<Checkbox color=\"primary\" />}\r\n                label=\"Besonderer Raum notwendig\"\r\n                labelPlacement=\"end\"\r\n                />\r\n            </div>\r\n            <div>\r\n                <Button\r\n                 type=\"submit\" \r\n                >\r\n                  Speichern\r\n                </Button>\r\n            </div>\r\n          </form>\r\n      </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default ProjektFormular;","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\ParticipationList.js",["148","149","150"],"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\ParticipationListEntry.js",["151","152","153","154","155","156","157","158","159"],"//getParticipationByProject()\r\n\r\n//getPersonByParticipation()\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Button, ListItem, ListItemSecondaryAction, Link, Typography } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SwapHoriz from '@material-ui/icons/SwapHoriz';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { AppApi } from '../../AppApi';\r\nimport ContextErrorMessage from '../dialogs/ContextErrorMessage';\r\nimport LoadingProgress from '../dialogs/LoadingProgress';\r\n// import MoneyTransferDialog from './dialogs/MoneyTransferDialog'; Noten Dialog \r\n\r\n\r\n/**\r\n * Renders a ParticipationBO object within a ListEntry and provides a delete button to delete it. Links participations \r\n * to a list of transactions. This is done by routing the link to /transactions and passing the ProjectBO and\r\n * the ParticipationBO as props to the ParticipationList component. It also shows a MoneyTransferDialog to transfer money.\r\n * \r\n * @see See Material-UIs [Lists](https://material-ui.com/components/lists/)\r\n * @see See Material-UIs [ListItem](https://material-ui.com/api/list-item/)\r\n * @see See Material-UIs [Link](https://material-ui.com/components/links/)\r\n * @see See Material-UIs React Router integration [Composition](https://material-ui.com/guides/composition/#link)\r\n * @see See React Router [ReactRouter](https://reacttraining.com/react-router/web/guides/quick-start)\r\n * @see See React Router [Link](https://reacttraining.com/react-router/web/api/Link)\r\n * \r\n * @see See [MoneyTransferDialog](#moneytransferdialog)\r\n * @see See [TransactionList](#transactionlist)\r\n * \r\n * \r\n */\r\n\r\nclass ParticipationListEntry extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Init an empty state\r\n    this.state = {\r\n      student: '',\r\n      loadingInProgress: false,\r\n      deletingInProgress: false,\r\n      loadingError: null,\r\n      deletingError: null,\r\n      // showMoneyTransferDialog: false,\r\n    };\r\n  }\r\n\r\n  /** Lifecycle method, which is called when the component gets inserted into the browsers DOM */\r\n  componentDidMount() {\r\n    console.log(this.props.participations.getStudent_id())\r\n    // load initial balance\r\n    this.getStudent();\r\n  }\r\n\r\n  /** Lifecycle method, which is called when the component was updated */\r\n  componentDidUpdate(prevProps) {\r\n    if ((this.props.show) && (this.props.show !== prevProps.show)) {\r\n      this.getStudent();\r\n    }\r\n  }\r\n\r\n  /** gets the students for this participation */\r\n\r\n  \r\n  getStudent = () => {\r\n    var api = AppApi.getAPI()\r\n    console.log(this.props.participations.getStudent_id())\r\n    api.getStudent(this.props.participations.getStudent_id()).then(student =>\r\n      this.setState({\r\n        student: student,\r\n        loadingInProgress: false, // loading indicator \r\n        loadingError: null\r\n      })).catch(e =>\r\n        this.setState({ // Reset state with error from catch \r\n          student: null,\r\n          loadingInProgress: false,\r\n          loadingError: e\r\n        })\r\n      );\r\n\r\n    // set loading to true\r\n    this.setState({\r\n      balance: 'loading',\r\n      loadingInProgress: true,\r\n      loadingError: null\r\n    });\r\n  }\r\n\r\n  /** Deletes this participation */\r\n  deleteParticipation = () => {\r\n    const { participation } = this.props;\r\n    var api = AppApi.getAPI()\r\n    api.deleteParticipation(participation.getID()).then(() => {\r\n      this.setState({  // Set new state when ParticipationBOs have been fetched\r\n        deletingInProgress: false, // loading indicator \r\n        deletingError: null\r\n      })\r\n      // console.log(participation);\r\n      this.props.onParticipationDeleted(participation);\r\n    }).catch(e =>\r\n      this.setState({ // Reset state with error from catch \r\n        deletingInProgress: false,\r\n        deletingError: e\r\n      })\r\n    );\r\n\r\n    // set loading to true\r\n    this.setState({\r\n      deletingInProgress: true,\r\n      deletingError: null\r\n    });\r\n  }\r\n\r\n  // /** Handles click events from the transfer money button */\r\n  // transferMoney = () => {\r\n  //   this.setState({\r\n  //     showMoneyTransferDialog: true\r\n  //   });\r\n  // }\r\n\r\n  // /** Handles the onClose event from the transfer money dialog */\r\n  // moneyTransferDialogClosed = (transaction) => {\r\n  //   this.setState({\r\n  //     showMoneyTransferDialog: false\r\n  //   });\r\n  //   if (transaction) {\r\n  //     // Transaction is not null and therefore was performed\r\n  //     this.getBalance();\r\n  //   }\r\n  // }\r\n\r\n  /** Renders the component */\r\n  render() {\r\n    const { classes, project, participation } = this.props;\r\n    const { loadingInProgress, deletingInProgress, loadingError, deletingError, student, showMoneyTransferDialog } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <ListItem>\r\n          <Typography className={classes.participationEntry}>\r\n            {/* <Link component={RouterLink} to={{\r\n              pathname: '/students',\r\n              owner: {\r\n                project: project,\r\n                participation: participation\r\n              }\r\n            }} >\r\n              Participation ID: {participation.getID()}\r\n            </Link> */}\r\n            Participation ID: {this.props.participation.getID()}\r\n\r\n          </Typography>\r\n          {/* <Typography color='textSecondary'>\r\n            Student: {!isNaN(student) ? AppApi.getAPI().getCurrencyFormatter().format(student) : student}\r\n          </Typography>\r\n          <ListItemSecondaryAction>\r\n            <Button className={classes.buttonMargin} variant='outlined' color='primary' size='small' startIcon={<SwapHoriz />} onClick={this.transferMoney}>\r\n              Transfer\r\n            </Button>\r\n            <Button color='secondary' size='small' startIcon={<DeleteIcon />} onClick={this.deleteParticipation}>\r\n              Delete\r\n            </Button>\r\n          </ListItemSecondaryAction> */}\r\n        </ListItem>\r\n        <ListItem>\r\n          <LoadingProgress show={loadingInProgress || deletingInProgress} />\r\n          <ContextErrorMessage error={loadingError} contextErrorMsg={`The students of participation ${participation.getID()} could not be loaded.`} onReload={this.getStudent} />\r\n          <ContextErrorMessage error={deletingError} contextErrorMsg={`The participation ${participation.getID()} could not be deleted.`} onReload={this.deleteParticipation} />\r\n        </ListItem>\r\n        {/* <MoneyTransferDialog show={showMoneyTransferDialog} project={project} participation={participation} onClose={this.moneyTransferDialogClosed} /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%'\r\n  }, \r\n  buttonMargin: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  participationEntry: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n  }\r\n});\r\n\r\n/** PropTypes */\r\nParticipationListEntry.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  /** The ProjectBO of this ParticipationListEntry */\r\n  project: PropTypes.object.isRequired,\r\n  /** The ParticipationBO to be rendered */\r\n  participation: PropTypes.object.isRequired,\r\n  /**  \r\n   * Event Handler function which is called after a sucessfull delete of this participation. \r\n   * \r\n   * Signature: onParticipationDeleted(ParticipationBO participation); \r\n   */\r\n  onParticipationDeleted: PropTypes.func.isRequired,\r\n  /** If true, balance is (re)loaded */\r\n  show: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(ParticipationListEntry);\r\n","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\AppApi\\StudentBO.js",["160"],"import BusinessObject from './BusinessObject';\r\nimport PersonBO from './PersonBO';\r\n\r\n/**\r\n * Represents a Role of the system\r\n */\r\nexport default class StudentBO extends BusinessObject {\r\n\r\n  /**\r\n   * Constructs a RoleBO object with a given name\r\n   * \r\n   * @param {String} aname - the name of this RoleBO.\r\n   */\r\n  constructor(aname, astudiengang, amatr_nr) {\r\n    super();\r\n    this.name = aname\r\n    this.studiengang = astudiengang;\r\n    this.matr_nr = amatr_nr;\r\n  }\r\n\r\n  setName(aname) {\r\n    this.name = aname\r\n  }\r\n\r\n  getName() {\r\n    return this.name\r\n  }\r\n\r\n  setStudiengang(astudiengang){\r\n      this.studiengang = astudiengang\r\n  }\r\n\r\n  getStudiengang(){\r\n      return this.studiengang\r\n  }\r\n\r\n  setMatrNr(amatr_nr){\r\n      this.matr_nr = amatr_nr\r\n  }\r\n\r\n  getMatrNr(){\r\n      return this.matr_nr\r\n  }\r\n\r\n    /** \r\n   * Returns an Array of ParticipationBOs from a given JSON structure.\r\n   */\r\n  static fromJSON(student) {\r\n    let result = [];\r\n\r\n    if (Array.isArray(student)) {\r\n      student.forEach((p) => {\r\n        Object.setPrototypeOf(p, StudentBO.prototype);\r\n        result.push(p);\r\n      })\r\n    } else {\r\n      // Es handelt sich offenbar um ein singuläres Objekt\r\n      let p = student;\r\n      Object.setPrototypeOf(p, StudentBO.prototype);\r\n      result.push(p);\r\n    }\r\n\r\n    return result;\r\n  }\r\n}",{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":9,"column":8,"nodeType":"167","messageId":"168","endLine":9,"endColumn":14},{"ruleId":"165","severity":1,"message":"169","line":12,"column":8,"nodeType":"167","messageId":"168","endLine":12,"endColumn":16},{"ruleId":"165","severity":1,"message":"170","line":18,"column":8,"nodeType":"167","messageId":"168","endLine":18,"endColumn":21},{"ruleId":"165","severity":1,"message":"171","line":19,"column":8,"nodeType":"167","messageId":"168","endLine":19,"endColumn":18},{"ruleId":"165","severity":1,"message":"172","line":20,"column":8,"nodeType":"167","messageId":"168","endLine":20,"endColumn":17},{"ruleId":"165","severity":1,"message":"173","line":162,"column":16,"nodeType":"167","messageId":"168","endLine":162,"endColumn":20},{"ruleId":"165","severity":1,"message":"166","line":2,"column":8,"nodeType":"167","messageId":"168","endLine":2,"endColumn":14},{"ruleId":"165","severity":1,"message":"166","line":6,"column":8,"nodeType":"167","messageId":"168","endLine":6,"endColumn":14},{"ruleId":"174","severity":1,"message":"175","line":11,"column":5,"nodeType":"176","messageId":"177","endLine":13,"endColumn":6},{"ruleId":"174","severity":1,"message":"175","line":11,"column":5,"nodeType":"176","messageId":"177","endLine":13,"endColumn":2},{"ruleId":"165","severity":1,"message":"178","line":17,"column":12,"nodeType":"167","messageId":"168","endLine":17,"endColumn":16},{"ruleId":"165","severity":1,"message":"179","line":8,"column":27,"nodeType":"167","messageId":"168","endLine":8,"endColumn":33},{"ruleId":"165","severity":1,"message":"180","line":8,"column":35,"nodeType":"167","messageId":"168","endLine":8,"endColumn":40},{"ruleId":"165","severity":1,"message":"181","line":8,"column":42,"nodeType":"167","messageId":"168","endLine":8,"endColumn":50},{"ruleId":"165","severity":1,"message":"182","line":9,"column":8,"nodeType":"167","messageId":"168","endLine":9,"endColumn":19},{"ruleId":"165","severity":1,"message":"183","line":10,"column":8,"nodeType":"167","messageId":"168","endLine":10,"endColumn":23},{"ruleId":"165","severity":1,"message":"169","line":11,"column":8,"nodeType":"167","messageId":"168","endLine":11,"endColumn":16},{"ruleId":"174","severity":1,"message":"175","line":19,"column":3,"nodeType":"176","messageId":"177","endLine":21,"endColumn":4},{"ruleId":"165","severity":1,"message":"184","line":1,"column":17,"nodeType":"167","messageId":"168","endLine":1,"endColumn":26},{"ruleId":"174","severity":1,"message":"175","line":12,"column":5,"nodeType":"176","messageId":"177","endLine":14,"endColumn":6},{"ruleId":"165","severity":1,"message":"179","line":6,"column":27,"nodeType":"167","messageId":"168","endLine":6,"endColumn":33},{"ruleId":"174","severity":1,"message":"175","line":11,"column":5,"nodeType":"176","messageId":"177","endLine":13,"endColumn":6},{"ruleId":"165","severity":1,"message":"185","line":4,"column":8,"nodeType":"167","messageId":"168","endLine":4,"endColumn":16},{"ruleId":"165","severity":1,"message":"186","line":34,"column":10,"nodeType":"167","messageId":"168","endLine":34,"endColumn":14},{"ruleId":"165","severity":1,"message":"187","line":34,"column":16,"nodeType":"167","messageId":"168","endLine":34,"endColumn":23},{"ruleId":"165","severity":1,"message":"188","line":4,"column":10,"nodeType":"167","messageId":"168","endLine":4,"endColumn":16},{"ruleId":"165","severity":1,"message":"189","line":5,"column":8,"nodeType":"167","messageId":"168","endLine":5,"endColumn":15},{"ruleId":"165","severity":1,"message":"190","line":107,"column":75,"nodeType":"167","messageId":"168","endLine":107,"endColumn":99},{"ruleId":"165","severity":1,"message":"188","line":7,"column":22,"nodeType":"167","messageId":"168","endLine":7,"endColumn":28},{"ruleId":"165","severity":1,"message":"191","line":7,"column":40,"nodeType":"167","messageId":"168","endLine":7,"endColumn":63},{"ruleId":"165","severity":1,"message":"192","line":7,"column":65,"nodeType":"167","messageId":"168","endLine":7,"endColumn":69},{"ruleId":"165","severity":1,"message":"193","line":8,"column":8,"nodeType":"167","messageId":"168","endLine":8,"endColumn":18},{"ruleId":"165","severity":1,"message":"194","line":9,"column":8,"nodeType":"167","messageId":"168","endLine":9,"endColumn":17},{"ruleId":"165","severity":1,"message":"195","line":10,"column":18,"nodeType":"167","messageId":"168","endLine":10,"endColumn":28},{"ruleId":"165","severity":1,"message":"196","line":137,"column":22,"nodeType":"167","messageId":"168","endLine":137,"endColumn":29},{"ruleId":"165","severity":1,"message":"197","line":138,"column":81,"nodeType":"167","messageId":"168","endLine":138,"endColumn":88},{"ruleId":"165","severity":1,"message":"198","line":138,"column":90,"nodeType":"167","messageId":"168","endLine":138,"endColumn":113},{"ruleId":"165","severity":1,"message":"199","line":2,"column":8,"nodeType":"167","messageId":"168","endLine":2,"endColumn":16},"no-native-reassign",["200"],"no-negated-in-lhs",["201"],"no-unused-vars","'RoleBO' is defined but never used.","Identifier","unusedVar","'UserView' is defined but never used.","'StudentenView' is defined but never used.","'DozentView' is defined but never used.","'AdminView' is defined but never used.","'name' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'user' is assigned a value but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Redirect' is defined but never used.","'ProjectList' is defined but never used.","'ProjektFormular' is defined but never used.","'Component' is defined but never used.","'MenuItem' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'Button' is defined but never used.","'AddIcon' is defined but never used.","'addingParticipationError' is assigned a value but never used.","'ListItemSecondaryAction' is defined but never used.","'Link' is defined but never used.","'DeleteIcon' is defined but never used.","'SwapHoriz' is defined but never used.","'RouterLink' is defined but never used.","'project' is assigned a value but never used.","'student' is assigned a value but never used.","'showMoneyTransferDialog' is assigned a value but never used.","'PersonBO' is defined but never used.","no-global-assign","no-unsafe-negation"]