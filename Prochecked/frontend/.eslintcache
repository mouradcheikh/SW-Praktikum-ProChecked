[{"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\index.js":"1","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\App.js":"2","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Theme.js":"3","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\AppApi\\PersonBO.js":"4","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\AppApi\\RoleBO.js":"5","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\AppApi\\AppApi.js":"6","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\UserView.js":"7","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\SignIn.js":"8","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\layout\\Header.js":"9","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\dialogs\\ContextErrorMessage.js":"10","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\dialogs\\LoadingProgress.js":"11","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\DozentView.js":"12","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\AdminView.js":"13","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\PersonLoggedIn.js":"14","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\AppApi\\BusinessObject.js":"15","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\AppApi\\ParticipationBO.js":"16","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\AppApi\\ProjectBO.js":"17","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\AppApi\\index.js":"18","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\ProjectList.js":"19","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\ProjectListEntry.js":"20","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\dialogs\\ProjectDeleteDialog.js":"21","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\ProjektErstellen.js":"22","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\ParticipationList.js":"23","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\ParticipationListEntry.js":"24","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\AppApi\\StudentBO.js":"25","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\AppApi\\GradingBO.js":"26","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\dialogs\\ParticipationForm.js":"27","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\StudentView.js":"28","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\AdminView\\ReleaseProject.js":"29","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\AdminView\\ProjectListNew.js":"30","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\AdminView\\ProjectListEntryNew.js":"31"},{"size":149,"mtime":1607077333800,"results":"32","hashOfConfig":"33"},{"size":9890,"mtime":1609240098609,"results":"34","hashOfConfig":"33"},{"size":1787,"mtime":1606826666305,"results":"35","hashOfConfig":"33"},{"size":1783,"mtime":1608633733670,"results":"36","hashOfConfig":"33"},{"size":449,"mtime":1607288611622,"results":"37","hashOfConfig":"33"},{"size":17320,"mtime":1609280523446,"results":"38","hashOfConfig":"33"},{"size":2735,"mtime":1609161347170,"results":"39","hashOfConfig":"33"},{"size":1551,"mtime":1609161347169,"results":"40","hashOfConfig":"33"},{"size":1336,"mtime":1608633733674,"results":"41","hashOfConfig":"33"},{"size":2209,"mtime":1606658777574,"results":"42","hashOfConfig":"33"},{"size":934,"mtime":1606658777575,"results":"43","hashOfConfig":"33"},{"size":2101,"mtime":1609161347154,"results":"44","hashOfConfig":"33"},{"size":1730,"mtime":1609239978558,"results":"45","hashOfConfig":"33"},{"size":1678,"mtime":1609161347162,"results":"46","hashOfConfig":"33"},{"size":1166,"mtime":1607537165096,"results":"47","hashOfConfig":"33"},{"size":1709,"mtime":1608633733670,"results":"48","hashOfConfig":"33"},{"size":3343,"mtime":1609281727821,"results":"49","hashOfConfig":"33"},{"size":435,"mtime":1609075351213,"results":"50","hashOfConfig":"33"},{"size":6204,"mtime":1609161347164,"results":"51","hashOfConfig":"33"},{"size":3613,"mtime":1609161347165,"results":"52","hashOfConfig":"33"},{"size":4282,"mtime":1607773792603,"results":"53","hashOfConfig":"33"},{"size":11748,"mtime":1609161347166,"results":"54","hashOfConfig":"33"},{"size":5626,"mtime":1609161347157,"results":"55","hashOfConfig":"33"},{"size":10816,"mtime":1609278616389,"results":"56","hashOfConfig":"33"},{"size":1491,"mtime":1608633733671,"results":"57","hashOfConfig":"33"},{"size":1955,"mtime":1609075351199,"results":"58","hashOfConfig":"33"},{"size":7860,"mtime":1609161347147,"results":"59","hashOfConfig":"33"},{"size":174,"mtime":1607879334311,"results":"60","hashOfConfig":"33"},{"size":6252,"mtime":1609239148505,"results":"61","hashOfConfig":"33"},{"size":7798,"mtime":1609283502302,"results":"62","hashOfConfig":"33"},{"size":5886,"mtime":1609282093378,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"15ctbv9",{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"66"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"66"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\index.js",[],["142","143"],"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\App.js",["144","145","146","147"],"import React from 'react';\r\n\r\nimport { BrowserRouter as Router, Route, Redirect, useHistory } from 'react-router-dom';\r\nimport { Container, ThemeProvider, CssBaseline } from '@material-ui/core';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\nimport PersonBO from './AppApi/PersonBO'\r\nimport RoleBO from './AppApi/RoleBO'\r\nimport AppAPI from './AppApi/AppApi'\r\nimport SignIn from './Components/pages/SignIn'; //importiere von Pages das SignIn\r\nimport UserView from './Components/pages/UserView';\r\nimport Header from './Components/layout/Header';\r\nimport LoadingProgress from './Components/dialogs/LoadingProgress';\r\nimport ContextErrorMessage from './Components/dialogs/ContextErrorMessage';\r\nimport Theme from './Theme';\r\n// import PersonList from './Components/PersonList';\r\nimport StudentView from './Components/pages/StudentView';\r\nimport DozentenView from './Components/pages/DozentView';\r\nimport AdminView from './Components/pages/AdminView';\r\nimport PersonLoggedIn from './Components/pages/PersonLoggedIn';\r\nimport ProjektFormular from './Components/pages/ProjektErstellen'\r\nimport ProjectList from './Components/pages/ProjectList';\r\nimport ProjectListNew from './Components/pages/AdminView/ProjectListNew';\r\n\r\n// import firebaseconfig from './firebaseconfig';\r\n\r\nclass App extends React.Component {\r\n\r\n    #firebaseConfig = {\r\n    \r\n        apiKey: \"AIzaSyAXRfVbXnTLoSxa_YJxTTaRckt803yV4I4\",\r\n        authDomain: \"prochecked-team09.firebaseapp.com\",\r\n        databaseURL: \"https://prochecked-team09.firebaseio.com\",\r\n        projectId: \"prochecked-team09\",\r\n        storageBucket: \"prochecked-team09.appspot.com\",\r\n        messagingSenderId: \"791050707787\",\r\n        appId: \"1:791050707787:web:f923c14b57ae697fde3ece\"\r\n    };\r\n\r\n    //Constrcutor welcher Firebase initialisiert \r\n    constructor (props) {\r\n        super(props)\r\n    \r\n\r\n    //Dann wird ein leeres state initalisiert \r\n\t    this.state = {\r\n            person: null,\r\n            appError: null,\r\n            authError: null,\r\n            authLoading: false\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromError(error) { //Hier wird der Status aktualisiert, \r\n\t\treturn { appError: error };          // dass beim nächsten Rendern die Fallback UI angezeigt wird \r\n    }\r\n    \r\n    handleAuthStateChange = person => { // Firebase Benutzer logt sich ein, der state wechselt den Zustand \r\n\t\tif (person) {\r\n            // console.log(\"handleauthstate\")\r\n\t\t\tthis.setState({\r\n\t\t\t\tauthLoading: true\r\n            });\r\n            \r\n            //die Person ist eingeloggt\r\n            person.getIdToken().then(token => {\r\n                document.cookie = `token=${token};path=/`; //pfad evtl. erweitern?\r\n            \r\n            //setzt den Nutzer auf Not bevor der Token angekommen ist \r\n                this.setState({\r\n\t\t\t\t\tperson: person,\r\n\t\t\t\t\tauthError: null,\r\n\t\t\t\t\tauthLoading: false\r\n                });\r\n                //Person aus Datenbank auslesen; wird durch SecurityDecorater reingeschrieben, falls noch nicht vorhanden\r\n                \r\n                this.getPersonByGoogleId(person.uid)\r\n                \r\n              \r\n            }).catch(error =>{\r\n                this.setState({\r\n                    authError:error,\r\n                    authLoading: false \r\n                });\r\n            });\r\n        \r\n        } else {\r\n            document.cookie = 'token=;path=/'; //Person hat sich ausgeloggt, dann clear token\r\n            //setze die ausgeloggte Person auf null\r\n            this.setState ({\r\n                person: null,\r\n                authLoading: false \r\n            });\r\n        }\r\n    }\r\n\r\n    handleSignIn = () => {\r\n\t\tthis.setState({\r\n\t\t\tauthLoading: true\r\n\t\t});\r\n\t\tconst provider = new firebase.auth.GoogleAuthProvider(); //Erstelle Instanz des Google-Provider-Objekts\r\n\t\tfirebase.auth().signInWithRedirect(provider); // Umleiten auf die signInWithRedirect ruft signInWithRedirect auf \r\n    }\r\n\r\n    getPersons(){\r\n        var api = AppAPI.getAPI()\r\n        console.log(api)\r\n        api.getPersons().then((person) =>\r\n            {console.log(person)\r\n            this.setState({\r\n                person: person\r\n            })}\r\n            )\r\n    }\r\n\r\n    createPerson(name, email, google_id){\r\n        var api = AppAPI.getAPI()\r\n        // console.log(api)\r\n        api.createPerson(name, email, google_id).then((person) =>\r\n            {console.log(person)\r\n            console.log(\"test\")\r\n            this.setState({\r\n                person: person\r\n            })}\r\n            )\r\n        }\r\n\r\n    getPersonByGoogleId = (google_id) => {\r\n        var api = AppAPI.getAPI()\r\n        // console.log(api)\r\n        api.getPersonByGoogleId(google_id).then((person) =>\r\n            {\r\n            this.setState({\r\n                person: person\r\n            })\r\n            })\r\n    }\r\n\r\n    setRole = (aRole) => {\r\n        const person = this.state.person\r\n        const {name, email, google_id, id, creation_date, last_updated} = person\r\n        var updatedPerson = new PersonBO(name, email, google_id, aRole)\r\n        updatedPerson.setID(id)\r\n        updatedPerson.setCreationDate(creation_date)\r\n        updatedPerson.setLastUpdated(last_updated)\r\n        var api = AppAPI.getAPI()\r\n        api.updatePerson(updatedPerson).then((newPerson) => { //bei put (updatePerson) kommt was zurück? kommt überhaupt person zurück?\r\n                        this.setState({\r\n                            person: newPerson\r\n                        })\r\n                    })\r\n                }\r\n\r\n    getBerechtigung = () => {\r\n        const person = this.state.person\r\n        const {name, berechtigung} = person\r\n        return (berechtigung)\r\n    }\r\n    \r\n    // checkIfPersonInDatabase(name, email, googleId) {\r\n    //     console.log(\"checkifuserindatabase\")\r\n    //     var api = AppAPI.getAPI()\r\n    //     console.log(api)\r\n\r\n    //     var suggestion = new PersonBO(name, email, googleId)\r\n    //                 console.log(suggestion)\r\n                    \r\n    //         api.getPersonByGoogleId(googleId).then((person) => {\r\n    //             console.log(person)\r\n    //             if (!person.getGoogleId()) {\r\n    //                 var suggestion = new PersonBO(name, email, googleId)\r\n    //                 console.log(suggestion)\r\n    //                 api.createPerson(suggestion).then((newPerson) => {\r\n    //                 this.setState({\r\n    //                     person: newPerson})\r\n    //                 }\r\n    //                 )\r\n    //             }\r\n            \r\n\r\n    //             else {\r\n    //                 this.setState({\r\n    //                     person: person\r\n    //                 })\r\n    //             }\r\n    //         }\r\n    //     )\r\n    // }\r\n\r\n    \r\n\r\n    // createPersonInDatabase(name, email, googleId) {\r\n    //     console.log(\"createPersonInDatabase\")\r\n    //     var api = AppAPI.getAPI()\r\n    //     console.log(api)\r\n\r\n    //     var suggestion = new PersonBO(name, email, googleId)\r\n    //             console.log(suggestion)\r\n    //             var suggestion = new PersonBO(name, email, googleId)\r\n    //             console.log(suggestion)\r\n    //             api.createPerson(suggestion).then((newPerson) => {\r\n    //             this.setState({\r\n    //                 person: newPerson})\r\n    //                 }  \r\n    //             )\r\n    // }\r\n\r\n    // setRoleOfPerson(person, role){\r\n    //     var api = AppAPI.getAPI()\r\n    //         updatedPerson = person.setBerechtigung(role)\r\n    //         api.update(updatedPerson).then((newPerson) => {\r\n    //             this.setState({\r\n    //                 person: newPerson\r\n    //             })\r\n    //         })\r\n    // }\r\n    \r\n\r\n            \r\n    ProfList(){\r\n        var api = AppAPI.getAPI()\r\n        api.getPersonByRole(2).then((persons) =>\r\n        {\r\n            // console.log(persons)\r\n        })\r\n      }\r\n        \r\n    componentDidMount() {\r\n        firebase.initializeApp(this.#firebaseConfig);\r\n        firebase.auth().languageCode = 'en';\r\n        firebase.auth().onAuthStateChanged(this.handleAuthStateChange);\r\n        // console.log(\"rendered\")\r\n        \r\n        };\r\n    \r\n    \t/** Renders the whole app */\r\n\trender() {\r\n        const { person, appError, authError, authLoading } = this.state;\r\n        \r\n\t\treturn (\r\n\t\t\t<ThemeProvider theme={Theme}>\r\n\t\t\t\t<CssBaseline />\r\n\t\t\t\t<Router basename={process.env.PUBLIC_URL}>\r\n\t\t\t\t\t<Container maxWidth='md'>\r\n\t\t\t\t\t\t<Header/>\r\n                        <Route exact path = '/StudentView' component = {StudentView}/>\r\n                        <Route exact path = '/DozentView' component = {DozentenView}/>\r\n                        <Route exact path = '/AdminView' component = {AdminView}/>\r\n                        <Route exact path = '/CreateProject' component = {ProjektFormular}/>\r\n                        <Route exact path = '/ProjectList' component = {ProjectList}/>\r\n                        <Route exact path = '/ProjectListNew' component = {ProjectListNew}/>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t// Ist eine Person eingeloggt?\r\n                           person ?\r\n                                <PersonLoggedIn berechtigung = {this.state.person.berechtigung} person = {this.state.person} setRole = {this.setRole}></PersonLoggedIn>\r\n\r\n                                \r\n\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t// sonst zeige die SignIn Seite \r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<Redirect to='/SignIn' />\r\n\t\t\t\t\t\t\t\t\t<SignIn onSignIn={this.handleSignIn} />\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t<LoadingProgress show={authLoading} />\r\n\t\t\t\t\t\t<ContextErrorMessage error={authError} contextErrorMsg={`Während der Anmeldung ist etwas falsch gelaufen.`} onReload={this.handleSignIn} />\r\n\t\t\t\t\t\t<ContextErrorMessage error={appError} contextErrorMsg={`Innerhalb des Programms gab es einen Fehler. Bitte die Seite erneut laden.`} />\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</Router>\r\n\t\t\t</ThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default App;","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Theme.js",[],"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\AppApi\\PersonBO.js",["148"],"import BusinessObject from './BusinessObject';\r\nimport RoleBO from './RoleBO'\r\n\r\n/**\r\n * Represents a person of the system\r\n */\r\nexport default class PersonBO extends BusinessObject {\r\n\r\n  /**\r\n   * Constructs a PersonBO object with a given name, email, google id and role\r\n   * \r\n   * @param {String} aname - the name of this PersonBO.\r\n   */\r\n  constructor(aname, aemail, agoogleid, aberechtigung) {\r\n    super();\r\n    this.name = aname\r\n    this.email = aemail\r\n    this.google_id = agoogleid\r\n    this.berechtigung = aberechtigung\r\n    this.student_id = null\r\n  }\r\n\r\n  /**\r\n   * Sets a new name\r\n   * \r\n   * @param {String} aname - the new name of this PersonBO.\r\n   */\r\n  setName(aname) {\r\n    this.name = aname\r\n  }\r\n\r\n  /**\r\n   * Gets the name.\r\n   */\r\n  getName() {\r\n    return this.name\r\n  }\r\n\r\n  setEmail(aemail){\r\n    this.email = aemail\r\n  }\r\n\r\n  getEmail(){\r\n    return this.email\r\n  }\r\n\r\n  setGoogleId(agoogleid){\r\n    this.google_id = agoogleid\r\n  }\r\n\r\n  getGoogleId(){\r\n    return this.google_id\r\n  }\r\n\r\n  setBerechtigung(aberechtigung){\r\n    this.berechtigung = aberechtigung\r\n  }\r\n\r\n  getBerechtigung(){\r\n    return this.berechtigung\r\n  }\r\n\r\n  setStudent(astudent_id){\r\n    this.student_id = astudent_id\r\n  }\r\n\r\n  getStudent(){\r\n    return this.student_id\r\n  }\r\n\r\n  /** \r\n   * Returns an Array of PersonBOs from a given JSON structure.\r\n   */\r\n  static fromJSON(persons) {\r\n    let result = [];\r\n\r\n    if (Array.isArray(persons)) {\r\n      persons.forEach((p) => {\r\n        Object.setPrototypeOf(p, PersonBO.prototype);\r\n        result.push(p);\r\n      })\r\n    } else {\r\n      // Es handelt sich offenbar um ein singuläres Objekt\r\n      let p = persons;\r\n      Object.setPrototypeOf(p, PersonBO.prototype);\r\n      result.push(p);\r\n    }\r\n\r\n    return result;\r\n  }\r\n}","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\AppApi\\RoleBO.js",[],"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\AppApi\\AppApi.js",["149","150","151"],"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\UserView.js",["152","153"],"import Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n// import { Link as RouterLink } from 'react-router-dom'\r\nimport React, { Component } from 'react';\r\nimport RoleBO from '../../AppApi/RoleBO'\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass UserView extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n    }\r\n\r\n    handleAdminButtonClicked = () => {\r\n      this.props.setRole(3);\r\n      this.viewRole()\r\n    }\r\n\r\n    handleStudentButtonClicked = () => {\r\n      this.props.setRole(1);\r\n      this.viewRole()\r\n    }\r\n\r\n    handleDozentButtonClicked = () => {\r\n      this.props.setRole(2);\r\n      this.viewRole()\r\n    }\r\n\r\n    viewRole= function() {\r\n      console.log(\"clicked\")\r\n    };\r\n\r\nrender () {\r\n  const { classes } = this.props;\r\n\r\n\treturn(\r\n        <div>\r\n          <center>\r\n                <h1>Bitte wählen Sie Ihre Rolle:</h1>\r\n                <div>\r\n                <Link to='/StudentView'>\r\n                <Button\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    onClick = {this.handleStudentButtonClicked}\r\n                >\r\n                            Student\r\n                    \r\n                </Button>\r\n                </Link>\r\n                </div>\r\n                <div>\r\n                <Link to={{\r\n                pathname: '/DozentView',\r\n                state: { person: this.props.person }\r\n                }}>\r\n                <Button\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    algin=\"center\"\r\n                    className={classes.button}\r\n                    onClick = {this.handleDozentButtonClicked}\r\n                    \r\n                >\r\n                            Dozent\r\n                    \r\n                </Button>\r\n                </Link>\r\n                </div>\r\n                <div>\r\n                <Link to='/AdminView'>\r\n                <Button\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    onClick = {this.handleAdminButtonClicked}\r\n                    \r\n                 >\r\n                            Admin\r\n                  \r\n                </Button>\r\n                </Link>\r\n                </div>\r\n        </center>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = (theme) => ({\r\n  button: {\r\n    margin: theme.spacing(2),\r\n    width: 170,\r\n    fontSize: 25,\r\n    padding: \"15x 0\"\r\n  },\r\n})\r\n\r\n  export default  withStyles(styles)(UserView);","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\SignIn.js",[],"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\layout\\Header.js",["154","155"],"import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SubjectIcon from '@material-ui/icons/Subject';\r\n\r\nclass Header extends React.Component {\r\n    constructor (props) {\r\n        super (props)\r\n}\r\n\r\nrender () {\r\n\r\n    const {user,classes} = this.props;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton}  aria-label=\"menu\">\r\n            <SubjectIcon/>\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n              ProChecked - Hochschule der Medien\r\n          </Typography>\r\n          <Button color=\"inherit\"></Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}}\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      width: \"100%\"\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(28),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n  })\r\n\r\nexport default withStyles(styles) (Header);\r\n","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\dialogs\\ContextErrorMessage.js",[],"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\dialogs\\LoadingProgress.js",[],"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\DozentView.js",["156","157","158","159","160","161","162"],"import Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n// import { Link as RouterLink } from 'react-router-dom'\r\n//import './App.css';\r\nimport React, { Component } from 'react';\r\n// import RoleBO from '../../AppApi/RoleBO'\r\nimport {Link} from 'react-router-dom';\r\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\r\nimport ProjectList from './ProjectList';\r\nimport ProjektFormular from './ProjektErstellen'\r\nimport UserView from './UserView'\r\nimport { AppApi } from '../../AppApi';\r\n\r\n\r\n// function DozentenView(props) {\r\nclass DozentenView extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      DozentList : null\r\n  };\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const person = this.props.location.state.person\r\n\r\n    return(<div>\r\n      <center>\r\n        <div>\r\n            <h1>Wählen Sie einen der folgenden Optionen aus:</h1>\r\n            <Link to={{\r\n            pathname: '/CreateProject',\r\n            state: { linkState: person }\r\n            }}>\r\n            <Button\r\n                size=\"large\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n            >\r\n                        Projekt erstellen\r\n                \r\n            </Button>\r\n            </Link>\r\n  </div>\r\n            <div>            \r\n            <Link to={{\r\n            pathname: '/ProjectList',\r\n            state: { linkState: person }\r\n            }}>\r\n           <Button\r\n                size=\"large\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                algin=\"center\"\r\n                className={classes.button}\r\n                > \r\n                    Bewertung und Teilnehmerpflege\r\n            </Button>\r\n            </Link>\r\n            </div>\r\n    </center>\r\n  </div>\r\n); \r\n}\r\n}\r\n\r\nconst styles = (theme) => ({\r\n  button: {\r\n    margin: theme.spacing(2),\r\n    width: 285,\r\n    fontSize: 25,\r\n    padding: \"15x 0\"\r\n  },\r\n})\r\n\r\n  export default withStyles(styles)(DozentenView);\r\n\r\n","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\AdminView.js",["163"],"// import React, { Component } from 'react';\r\n// function AdminView(){\r\n//     return( \r\n//         <div>\r\n//             <h1> AdminView </h1>\r\n//         </div>\r\n//     );\r\n// }\r\n// export default AdminView;\r\n\r\n// class AdminView extends React.Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//     }\r\n//     render() { \r\n//         return ( \r\n//         <div>\r\n//             <h1> AdminView </h1>\r\n//         </div>\r\n//          );\r\n//     }npm install react-theme-loader --save\r\n// }\r\n \r\n// export default AdminView; \r\n\r\n\r\nimport React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport { makeStyles, createStyles, createMuiTheme, Theme } from '@material-ui/core/styles';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      backgroundColor: 'gray'\r\n    },\r\n    paper: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n  }),\r\n);\r\n\r\nexport default function MenuListComposition() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    \r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <h1>Was möchten Sie tun?</h1>\r\n        <MenuList>\r\n          <Link to='/ProjectListNew'>\r\n          <MenuItem>Projekte freigeben</MenuItem>\r\n          </Link>\r\n          <Link to='/CreateProject' >\r\n          <MenuItem>Projekte erstellen</MenuItem>\r\n          </Link>\r\n          <Link>\r\n          <MenuItem>X</MenuItem>\r\n          </Link>\r\n        </MenuList>\r\n      </Paper>   \r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\PersonLoggedIn.js",["164","165","166","167","168"],"import React, { Component } from 'react';\r\nimport StudentView from './StudentView'\r\nimport AdminView from './AdminView'\r\nimport DozentView from './DozentView'\r\nimport UserView from './UserView'\r\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\r\n\r\nclass PersonLoggedIn extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() \r\n    { \r\n        let page\r\n        let berechtigung = this.props.berechtigung\r\n        if (berechtigung === 1){\r\n            page = <> \r\n                    <Redirect to={{\r\n                    pathname: '/StudentView'\r\n                    }}\r\n                    />\r\n                    </>\r\n        }\r\n        else if (berechtigung === 2){\r\n            page = <>\t\r\n                    <Redirect to={{\r\n                    pathname: '/DozentView',\r\n                    state: { person : this.props.person }\r\n                    }}\r\n                    />\r\n                    </>\r\n        }\r\n        else if (berechtigung === 3){\r\n            page = <>\t\r\n                    <Redirect to={{\r\n                    pathname: '/AdminView',\r\n                    }}\r\n                    />\r\n                    </>\r\n        }\r\n        else {\r\n            page = <>\r\n                    <Redirect from='/' to='UserView' />\r\n                    <Route exact path='/UserView'>\r\n                    <UserView setRole={this.props.setRole} person={this.props.person}/>\r\n                    </Route>\r\n                    </>;\r\n        }\r\n        return(\r\n            <div>\r\n                {page}\r\n            </div>\r\n            \r\n            )\r\n         ;\r\n    }\r\n}\r\n \r\nexport default PersonLoggedIn; ","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\AppApi\\BusinessObject.js",[],"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\AppApi\\ParticipationBO.js",[],"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\AppApi\\ProjectBO.js",[],"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\AppApi\\index.js",[],"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\ProjectList.js",["169","170","171","172"],"import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Button, TextField, InputAdornment, IconButton, Grid, Typography } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ClearIcon from '@material-ui/icons/Clear'\r\nimport { withRouter } from 'react-router-dom';\r\nimport  {AppApi}  from '../../AppApi';\r\nimport ContextErrorMessage from '../dialogs/ContextErrorMessage';\r\nimport LoadingProgress from '../dialogs/LoadingProgress';\r\nimport ProjectForm from '../dialogs/ParticipationForm';\r\nimport ProjectListEntry from './ProjectListEntry';\r\n\r\n/**\r\n * Controlls a list of ProjectListEntrys to create a accordion for each project.\r\n *\r\n * @see See [ProjectListEntry](#projectlistentry)\r\n *\r\n */\r\nclass ProjectList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // console.log(props);\r\n    let expandedID = null;\r\n\r\n    if (this.props.location.expandProject) {\r\n      expandedID = this.props.location.expandProject.getID();\r\n    }\r\n\r\n    // Init an empty state\r\n    this.state = {\r\n      projects: [],\r\n      filteredProjects: [],\r\n      projectFilter: '',\r\n      error: null,\r\n      loadingInProgress: false,\r\n      expandedProjectID: expandedID,\r\n      showProjectForm: false //evtl.nicht \r\n    };\r\n  }\r\n\r\n  /** Fetches all ProjectBOs from the backend */\r\n  getProjectsByDozent = (person_id) => {\r\n  // console.log(\"vor fetch\")\r\n    var api = AppApi.getAPI()\r\n    api.getProjectsByDozent(person_id) //evtl. Objekt von API vorher anlegen\r\n      .then(projectBOs =>\r\n        this.setState({               // Set new state when ProjectBOs have been fetched\r\n          projects: projectBOs,\r\n          filteredProjects: [...projectBOs], // store a copy\r\n          loadingInProgress: false,   // disable loading indicator\r\n          error: null\r\n        })).catch(e =>\r\n          this.setState({             // Reset state with error from catch\r\n            projects: [],\r\n            loadingInProgress: false, // disable loading indicator\r\n            error: e\r\n          })\r\n        );\r\n\r\n    // set loading to true\r\n    this.setState({\r\n      loadingInProgress: true,\r\n      error: null\r\n    });\r\n  }\r\n\r\n  /** Lifecycle method, which is called when the component gets inserted into the browsers DOM */\r\n  componentDidMount() {\r\n    // console.log(\"gerendert\")\r\n    let person = this.props.location.state.linkState\r\n    this.getProjectsByDozent(person.getID());\r\n   \r\n   \r\n  }\r\n\r\n  /**\r\n   * Handles onExpandedStateChange events from the ProjectListEntry component. Toggels the expanded state of\r\n   * the ProjectListEntry of the given ProjectBO.\r\n   *\r\n   * @param {project} ProjectBO of the ProjectListEntry to be toggeled\r\n   */\r\n  onExpandedStateChange = project => {\r\n    // console.log(projectID);\r\n    // Set expandend project entry to null by default\r\n    let newID = null;\r\n\r\n    // If same project entry is clicked, collapse it else expand a new one\r\n    if (project.getID() !== this.state.expandedProjectID) {\r\n      // Expand the project entry with projectID\r\n      newID = project.getID();\r\n    }\r\n    // console.log(newID);\r\n    this.setState({\r\n      expandedProjectID: newID,\r\n    });\r\n  }\r\n\r\n  // /**\r\n  //  * Handles onProjectDeleted events from the ProjectListEntry component\r\n  //  *\r\n  //  * @param {project} ProjectBO of the ProjectListEntry to be deleted\r\n  //  */\r\n  // projectDeleted = project => {\r\n  //   const newProjectList = this.state.projects.filter(projectFromState => projectFromState.getID() !== project.getID());\r\n  //   this.setState({\r\n  //     projects: newProjectList,\r\n  //     filteredProjects: [...newProjectList],\r\n  //     showProjectForm: false\r\n  //   });\r\n  // }\r\n\r\n  // /** Handles the onClick event of the add project button */\r\n  // addProjectButtonClicked = event => {\r\n  //   // Do not toggle the expanded state\r\n  //   event.stopPropagation();\r\n  //   //Show the CustmerForm\r\n  //   this.setState({\r\n  //     showProjectForm: true\r\n  //   });\r\n  // }\r\n\r\n  // /** Handles the onClose event of the ProjectForm */\r\n  // projectFormClosed = project => {\r\n  //   // project is not null and therefore created\r\n  //   if (project) {\r\n  //     const newProjectList = [...this.state.projects, project];\r\n  //     this.setState({\r\n  //       projects: newProjectList,\r\n  //       filteredProjects: [...newProjectList],\r\n  //       showProjectForm: false\r\n  //     });\r\n  //   } else {\r\n  //     this.setState({\r\n  //       showProjectForm: false\r\n  //     });\r\n  //   }\r\n  // }\r\n\r\n  /** Handels onChange events of the project filter text field */\r\n  filterFieldValueChange = event => {\r\n    const value = event.target.value.toLowerCase();\r\n    this.setState({\r\n      filteredProjects: this.state.projects.filter(project => {\r\n        let nameContainsValue = project.getName().toLowerCase().includes(value);\r\n\r\n        return nameContainsValue\r\n      }),\r\n      projectFilter: value\r\n    });\r\n  }\r\n\r\n  /** Handles the onClose event of the clear filter button */\r\n  clearFilterFieldButtonClicked = () => {\r\n    // Reset the filter\r\n    this.setState({\r\n      filteredProjects: [...this.state.projects],\r\n      projectFilter: ''\r\n    });\r\n  }\r\n\r\n  /** Renders the component */\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { filteredProjects, projectFilter, expandedProjectID, loadingInProgress, error, showProjectForm } = this.state;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Grid className={classes.projectFilter} container spacing={1} justify='flex-start' alignItems='center'>\r\n          <Grid item>\r\n            <Typography>\r\n              Projektfilter:\r\n              </Typography>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <TextField\r\n              autoFocus\r\n              fullWidth\r\n              id='projectFilter'\r\n              type='text'\r\n              value={projectFilter}\r\n              onChange={this.filterFieldValueChange}\r\n              InputProps={{\r\n                endAdornment: <InputAdornment position='end'>\r\n                  <IconButton onClick={this.clearFilterFieldButtonClicked}>\r\n                    <ClearIcon />\r\n                  </IconButton>\r\n                </InputAdornment>,\r\n              }}\r\n            />\r\n          </Grid>\r\n          {/* <Grid item xs />\r\n          <Grid item>\r\n            <Button variant='contained' color='primary' startIcon={<AddIcon />} onClick={this.addProjectButtonClicked}>\r\n              Add Project\r\n          </Button>\r\n          </Grid> */}\r\n        </Grid>\r\n        {\r\n          // Show the list of ProjectListEntry components\r\n          // Do not use strict comparison, since expandedProjectID maybe a string if given from the URL parameters\r\n          filteredProjects.map(project =>\r\n            <ProjectListEntry key={project.getID()} project={project} expandedState={expandedProjectID === project.getID()}\r\n              onExpandedStateChange={this.onExpandedStateChange}\r\n              onProjectDeleted={this.projectDeleted}\r\n            />)\r\n        }\r\n        <LoadingProgress show={loadingInProgress} />\r\n        <ContextErrorMessage error={error} contextErrorMsg={`The list of projects could not be loaded.`} onReload={this.getProjectsByDozent} />\r\n        {/* <ProjectForm show={showProjectForm} onClose={this.projectFormClosed} /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  projectFilter: {\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(1),\r\n  }\r\n});\r\n\r\n/** PropTypes */\r\nProjectList.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  /** @ignore */\r\n  location: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(ProjectList));","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\ProjectListEntry.js",["173","174","175","176","177","178"],"import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Typography, Accordion, AccordionSummary, AccordionDetails, Grid } from '@material-ui/core';\r\nimport { Button, ButtonGroup } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ProjectForm from '../../Components/dialogs/ProjectForm';\r\nimport ProjectDeleteDialog from '../../Components/dialogs/ProjectDeleteDialog';\r\nimport ParticipationList from './ParticipationList';\r\n\r\n\r\n//import AccountList from './AccountList';\r\n\r\n\r\n/**\r\n * Renders a ProjectBO object within a expandable/collapsible ProjectListEntry with the project manipulation\r\n * functions. If expanded, it renders a AccountList.\r\n * \r\n * @see See [ProjectList](#projectlist)\r\n * \r\n */\r\nclass ProjectListEntry extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Init the state\r\n    this.state = {\r\n      project: props.project,\r\n      showProjectForm: false,\r\n      showProjectDeleteDialog: false,\r\n    };\r\n  }\r\n\r\n  /** Handles onChange events of the underlying ExpansionPanel */\r\n  expansionPanelStateChanged = () => {\r\n    this.props.onExpandedStateChange(this.props.project);\r\n  }\r\n\r\n  /** Handles onAccountDelete events from an AccountListEntry  */\r\n  deleteAccountHandler = (deletedAccount) => {\r\n    // console.log(deletedAccount.getID());\r\n    this.setState({\r\n      accounts: this.state.accounts.filter(account => account.getID() !== deletedAccount.getID())\r\n    })\r\n  }\r\n\r\n  // /** Handles the onClick event of the edit project button */\r\n  // editProjectButtonClicked = (event) => {\r\n  //   event.stopPropagation();\r\n  //   this.setState({\r\n  //     showProjectForm: true\r\n  //   });\r\n  // }\r\n\r\n  // /** Handles the onClose event of the ProjectForm */\r\n  // projectFormClosed = (project) => {\r\n  //   // project is not null and therefor changed\r\n  //   if (project) {\r\n  //     this.setState({\r\n  //       project: project,\r\n  //       showProjectForm: false\r\n  //     });\r\n  //   } else {\r\n  //     this.setState({\r\n  //       showProjectForm: false\r\n  //     });\r\n  //   }\r\n  // }\r\n\r\n  // /** Handles the onClick event of the delete project button */\r\n  // deleteProjectButtonClicked = (event) => {\r\n  //   event.stopPropagation();\r\n  //   this.setState({\r\n  //     showProjectDeleteDialog: true\r\n  //   });\r\n  // }\r\n\r\n  // /** Handles the onClose event of the ProjectDeleteDialog */\r\n  // deleteProjectDialogClosed = (project) => {\r\n  //   // if project is not null, delete it\r\n  //   if (project) {\r\n  //     this.props.onProjectDeleted(project);\r\n  //   };\r\n\r\n  //   // Don´t show the dialog\r\n  //   this.setState({\r\n  //     showProjectDeleteDialog: false\r\n  //   });\r\n  // }\r\n\r\n  /** Renders the component */\r\n  render() {\r\n    const { classes, expandedState } = this.props;\r\n    // Use the states project\r\n    const { project, showProjectForm, showProjectDeleteDialog } = this.state;\r\n\r\n    // console.log(this.state);\r\n    return (\r\n \r\n      <div>\r\n        <Accordion defaultExpanded={false} expanded={expandedState} onChange={this.expansionPanelStateChanged}>\r\n          <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            id={`project${project.getID()}accountpanel-header`}\r\n          >\r\n            <Grid container spacing={1} justify='flex-start' alignItems='center'>\r\n              <Grid item>\r\n                <Typography variant='body1' className={classes.heading}>{project.getName()}\r\n                </Typography>\r\n              </Grid>\r\n              {/* <Grid item>\r\n                <ButtonGroup variant='text' size='small'>\r\n                  <Button color='primary' onClick={this.editProjectButtonClicked}>\r\n                    edit\r\n                  </Button>\r\n                  <Button color='secondary' onClick={this.deleteProjectButtonClicked}>\r\n                    delete\r\n                  </Button>\r\n                </ButtonGroup>\r\n              </Grid> */}\r\n              <Grid item xs />\r\n              <Grid item>\r\n                <Typography variant='body2' color={'textSecondary'}>List of Participations</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <ParticipationList show={expandedState} project={project} /> \r\n          </AccordionDetails>\r\n        </Accordion>\r\n        {/* <ProjectForm show={showProjectForm} project={project} onClose={this.projectFormClosed} />\r\n        <ProjectDeleteDialog show={showProjectDeleteDialog} project={project} onClose={this.deleteProjectDialogClosed} /> */}\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  }\r\n});\r\n\r\n/** PropTypes */\r\nProjectListEntry.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  /** The ProjectBO to be rendered */\r\n  project: PropTypes.object.isRequired,\r\n  /** The state of this ProjectListEntry. If true the project is shown with its accounts */\r\n  expandedState: PropTypes.bool.isRequired,\r\n  /** The handler responsible for handle expanded state changes (exanding/collapsing) of this ProjectListEntry \r\n   * \r\n   * Signature: onExpandedStateChange(ProjectBO project)\r\n   */\r\n  onExpandedStateChange: PropTypes.func.isRequired,\r\n  /** \r\n   *  Event Handler function which is called after a sucessfull delete of this project.\r\n   * \r\n   * Signature: onProjectDelete(ProjectBO project)\r\n   */\r\n  onProjectDeleted: PropTypes.func.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(ProjectListEntry);\r\n","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\dialogs\\ProjectDeleteDialog.js",[],"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\ProjektErstellen.js",["179","180","181","182","183","184","185"],"import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n// import FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { Button } from '@material-ui/core';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Input from '@material-ui/core/Input';\r\nimport { AppApi } from '../../AppApi';\r\nimport ProjectBO from '../../AppApi/ProjectBO';\r\nimport {Link, useHistory} from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    width: \"100%\",\r\n  },\r\n  text: {\r\n    margin: theme.spacing(0),\r\n    width: \"100%\",\r\n  }\r\n}));\r\n\r\nfunction ProjektFormular(props) {\r\n  const classes = useStyles();\r\n  const [ProjektArt, setProjektArt] = React.useState('');\r\n  const [Professor, setProfessor] = React.useState(null);\r\n  const [Titel, setProjektTitel] = React.useState('');\r\n  const [Kapazität,setKapazität] = React.useState('');\r\n  const [Inhalt, setInhalt] = React.useState('');\r\n  const [Raum, setRaum] = React.useState('');\r\n  const [WT, setWT] = React.useState('Ja');\r\n  const [BTvorVZ, setBTvorVZ] = React.useState('0');\r\n  const [BTinPZ, setBTinPZ] = React.useState('0');\r\n  const [BTinVZ, setBTinVZ] = React.useState('0');\r\n  const [BesondererRaum, setBesondererRaum] = React.useState('');\r\n  const [Professors, setProfessors] = React.useState(['']);\r\n  const [extKoop, setextKoop] = React.useState('');\r\n  const [Semester, setSemester] = React.useState('');\r\n  const [Semesters, setSemesters] = React.useState(['']);\r\n  const [BT, setBT] = React.useState('');\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const history = useHistory()\r\n\r\n  const handleProjektArt = (event) => {\r\n    setProjektArt(event.target.value);\r\n  };\r\n\r\n  const handleProfessor = (event) => {\r\n    setProfessor(event.target.value);\r\n    console.log(Professor)\r\n  }\r\n\r\n  const handleSemester = (event) => {\r\n    setSemester(event.target.value);\r\n  }\r\n\r\n  const handleWT = (event) => {\r\n    setWT(event.target.value);\r\n  };\r\n\r\n\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const project = new ProjectBO(Titel)\r\n    project.setProjectType(ProjektArt)\r\n    project.setCapacity(Kapazität)\r\n    project.setShortDescription(Inhalt)\r\n    let dozent = props.location.state.linkState\r\n    project.setDozent(dozent.id)\r\n    project.setRoom(Raum)\r\n    project.setWeeklyFlag(WT)\r\n    project.setNumberBdBLecturetime(BTvorVZ)\r\n    project.setNumberBdLecturetime(BTinVZ)\r\n    project.setNumberBdExamtime(BTinPZ)\r\n    project.setSpecialRoom(BesondererRaum)\r\n    // project.setDozent(Professor)\r\n    project.setProjectState(1)\r\n    project.setExtPartnerList(extKoop)\r\n    project.setSemester(Semester.id)\r\n    project.setprefferedbd(BT)\r\n\r\n    if (Professor != null){\r\n      project.setDozent2(Professor.id)\r\n    }\r\n\r\n    console.log(project)\r\n\r\n    var api = AppApi.getAPI()\r\n        // console.log(api)\r\n        api.createProject(project).then((project) =>\r\n            {console.log(project)\r\n            }\r\n            )\r\n\r\n    // console.log(\r\n    //   'ProjektArt:', ProjektArt, \r\n    //   'Titel:', Titel,\r\n    //   'Kapazität:', Kapazität,\r\n    //   'Inhalt:', Inhalt,\r\n    //   'Raum:', Raum,\r\n    //   'Wöchentlich:', WT,\r\n    //   'Blocktage vor Beginn der VZ:', BTvorVZ,\r\n    //   'Blocktage in der PZ:', BTinPZ,\r\n    //   'BT in der VZ:', BTinVZ,\r\n    //   'Besonderer Raum:', BesondererRaum,\r\n    //   'Professors:', Professors,\r\n    //   'current dozent', dozent.id\r\n    //   );\r\n    history.push({\r\n      pathname: '/DozentView',\r\n      state: {  \r\n        person: props.location.state.linkState, \r\n      },\r\n    }); \r\n  }\r\n  \r\n\r\nfunction ProfList(){\r\n  var api = AppApi.getAPI()\r\n  api.getPersonByRole(2).then((persons) =>\r\n  {console.log(persons)\r\n  setProfessors(persons)})\r\n}\r\n\r\nfunction SemesterList(){\r\n  var api = AppApi.getAPI()\r\n  api.getSemesters().then((semesters) =>\r\n  {console.log(semesters)\r\n  setSemesters(semesters)})\r\n}\r\n\r\n// useEffect(() => {\r\n//   console.log(\"useEffect\")\r\n//   function ProfList(){\r\n//     var api = AppApi.getAPI()\r\n//     api.getPersonByRole(2).then((persons) =>\r\n//     {console.log(persons)\r\n//     setProfessors(persons)})\r\n//   }\r\n//   ProfList()\r\n//   // var Profs = props.location.state.linkState\r\n//   // setProfessors(Profs)\r\n//   console.log(Professors)\r\n//   }, []\r\n//   )\r\n\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <center>\r\n      <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <h1>Geben Sie die Daten für das neue Projekt an:</h1>\r\n        <FormControl className={classes.formControl}>\r\n          <InputLabel id=\"artProjekt\">Art des Projekts</InputLabel>\r\n            <Select\r\n              labelId=\"artProjekt\"\r\n              id=\"ProjektArt\"\r\n              value={ProjektArt}\r\n              onChange={handleProjektArt}\r\n            >\r\n              <MenuItem value={1}>Fachspezifisches Projekt</MenuItem>\r\n              <MenuItem value={2}>Interdisziplinäres Projekt</MenuItem>\r\n              <MenuItem value={3}>Transdisziplinäres Projekt</MenuItem>\r\n\r\n              </Select>\r\n        </FormControl>\r\n        <FormControl className={classes.formControl}>\r\n            <InputLabel id=\"semester\">Semester</InputLabel>\r\n              <Select\r\n                labelId=\"semester\"\r\n                id=\"semester\"\r\n                value={Semester}\r\n                onChange={handleSemester} \r\n                onOpen={SemesterList}\r\n              >\r\n              {\r\n              Semesters.map((semester) => <MenuItem value = {semester}> {semester.name} </MenuItem>)\r\n              }\r\n              </Select>\r\n              </FormControl>\r\n        {/* <FormControl className={classes.formControl}>\r\n            <InputLabel id=\"semester\">Semester</InputLabel>\r\n              <Select\r\n                labelId=\"semester\"\r\n                id=\"semester\"\r\n                value={Semester}\r\n                onChange={handleSemester} \r\n                onOpen={SemesterList}\r\n              >\r\n              {\r\n              Semester.map((Semester) => <MenuItem value = {Semester.id}> {Semester.name} </MenuItem>)\r\n              }\r\n              </Select>\r\n              </FormControl> */}\r\n      </div>\r\n          <div><TextField className={classes.formControl}\r\n            id=\"titelProjekt\" \r\n            label=\"Titel des Projekts\" \r\n            variant=\"outlined\"\r\n            value={Titel}\r\n            onInput={e=>setProjektTitel(e.target.value)}\r\n            />\r\n            \r\n          </div>\r\n          <div><TextField className={classes.formControl}\r\n            id=\"maxTeilnehmer\"\r\n            label=\"Kapazität (max. Teilnehmerzahl)\"\r\n            type=\"number\" \r\n            variant=\"outlined\" \r\n            value={Kapazität}\r\n            onInput={e=>setKapazität(e.target.value)}\r\n            />\r\n            \r\n          </div>\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id=\"artProjekt\">weitere betreuende Professoren</InputLabel>\r\n              <Select\r\n                labelId=\"artProjekt\"\r\n                id=\"ProjektArt\"\r\n                value={Professor}\r\n                onChange={handleProfessor} \r\n                onOpen={ProfList}\r\n              >\r\n              {\r\n              Professors.map((Professor) => <MenuItem value = {Professor}> {Professor.name} </MenuItem>)\r\n              }\r\n              </Select>\r\n              </FormControl>\r\n              <div><TextField className={classes.formControl}\r\n                      id=\"ext. Koop.\"\r\n                      label=\"externe Kooperationspartner\"\r\n                      variant=\"outlined\"\r\n                      value={extKoop}\r\n                      onInput={e=>setextKoop(e.target.value)}\r\n                      />\r\n                </div>\r\n                <div><TextField className={classes.formControl}\r\n                    id=\"Inhalt\"\r\n                    label=\"Inhalt(Kurzbeschreibung):\"\r\n                    multiline\r\n                    rows={6} \r\n                    variant=\"outlined\" \r\n                    value={Inhalt}\r\n                    onInput={e=>setInhalt(e.target.value)}\r\n                    />\r\n                </div>\r\n              <div>\r\n              <FormControl component=\"fieldset\" className={classes.formControl}>\r\n                  <FormLabel component=\"legend\">Wöchentliche Termine</FormLabel>\r\n                  <RadioGroup aria-label=\"WT\" name=\"WT\" value={WT} onChange={handleWT}>\r\n                    <FormControlLabel value=\"true\" control={<Radio />} label=\"Ja\" />\r\n                    <FormControlLabel value=\"false\" control={<Radio />} label=\"Nein\" />\r\n                  </RadioGroup>\r\n              </FormControl>\r\n              </div>\r\n              <div><TextField className={classes.formControl}\r\n                    id=\"BT vor der VZ\"\r\n                    label=\"Blocktage vor Beginn der Vorlesungszeit \"\r\n                    variant=\"outlined\" \r\n                    type=\"number\"\r\n                    value={BTvorVZ}\r\n                    onInput={e=>setBTvorVZ(e.target.value)}\r\n                    />\r\n               </div>\r\n              <div><TextField className={classes.formControl}\r\n                    id=\"BT in der PZ\"\r\n                    label=\"Blocktage in der Prüfungszeit (nur inter-/tans. Projekte)\"\r\n                    variant=\"outlined\"\r\n                    type=\"number\" \r\n                    value={BTinPZ}\r\n                    onInput={e=>setBTinPZ(e.target.value)}\r\n                    />\r\n              </div>    \r\n              <div>\r\n                    <TextField className={classes.formControl}\r\n                    id=\"BTSamstag\"\r\n                    label=\"Blocktage (Samstag) in der Vorlesungszeit\"\r\n                    variant=\"outlined\"\r\n                    type=\"number\" \r\n                    value={BTinVZ}\r\n                    onInput={e=>setBTinVZ(e.target.value)}\r\n                    />\r\n               </div>\r\n               <div>\r\n                 <TextField className={classes.formControl}\r\n                    id=\"Blocktage\"\r\n                    label=\"präferierte Blocktage\"\r\n                    type=\"date\" \r\n                    variant=\"outlined\" \r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    onInput={e=>setBT(e.target.value)}\r\n                  />\r\n               </div>\r\n               <div><TextField className={classes.formControl}\r\n                    id=\"BesondererRaum\"\r\n                    label=\"Besonderer Raum (falls notwendig)\"\r\n                    variant=\"outlined\" \r\n                    value={BesondererRaum}\r\n                    onInput={e=>setBesondererRaum(e.target.value)}\r\n                    />\r\n               </div>\r\n            <div>\r\n              {/* <Link to={{\r\n              pathname: \"/DozentView\",\r\n              state: { person : props.location.state.linkState }\r\n              }}> */}\r\n                <Button\r\n                 type=\"submit\"\r\n                 variant=\"contained\"\r\n                 color=\"primary\" \r\n                >\r\n                  Speichern\r\n                </Button>\r\n              {/* </Link> */}\r\n            </div>\r\n          </form>\r\n          </center>\r\n      </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default ProjektFormular;\r\n","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\ParticipationList.js",[],"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\ParticipationListEntry.js",["186","187","188","189","190","191"],"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\AppApi\\StudentBO.js",["192"],"import BusinessObject from './BusinessObject';\r\nimport PersonBO from './PersonBO';\r\n\r\n/**\r\n * Represents a Role of the system\r\n */\r\nexport default class StudentBO extends PersonBO {\r\n\r\n  /**\r\n   * Constructs a RoleBO object with a given name\r\n   * \r\n   * @param {String} aname - the name of this RoleBO.\r\n   */\r\n  constructor(aname, astudiengang, amatr_nr, aperson_id) {\r\n    super();\r\n    this.name = aname\r\n    this.studiengang = astudiengang;\r\n    this.matr_nr = amatr_nr;\r\n    this.person_id = aperson_id\r\n  }\r\n\r\n  setName(aname) {\r\n    this.name = aname\r\n  }\r\n\r\n  getName() {\r\n    return this.name\r\n  }\r\n\r\n  setStudiengang(astudiengang){\r\n      this.studiengang = astudiengang\r\n  }\r\n\r\n  getStudiengang(){\r\n      return this.studiengang\r\n  }\r\n\r\n  setMatrNr(amatr_nr){\r\n      this.matr_nr = amatr_nr\r\n  }\r\n\r\n  getMatrNr(){\r\n      return this.matr_nr\r\n  }\r\n\r\n  setPerson(aperson_id){\r\n    this.person_id = aperson_id\r\n  }\r\n\r\n  getPerson(){\r\n    return this.person_id\r\n  }\r\n\r\n\r\n    /** \r\n   * Returns an Array of ParticipationBOs from a given JSON structure.\r\n   */\r\n  static fromJSON(student) {\r\n    let result = [];\r\n\r\n    if (Array.isArray(student)) {\r\n      student.forEach((p) => {\r\n        Object.setPrototypeOf(p, StudentBO.prototype);\r\n        result.push(p);\r\n      })\r\n    } else {\r\n      // Es handelt sich offenbar um ein singuläres Objekt\r\n      let p = student;\r\n      Object.setPrototypeOf(p, StudentBO.prototype);\r\n      result.push(p);\r\n    }\r\n\r\n    return result;\r\n  }\r\n}","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\AppApi\\GradingBO.js",["193"],"import BusinessObject from './BusinessObject';\r\n\r\n\r\n/**\r\n * Represents a person of the system\r\n */\r\nexport default class GradingBO extends BusinessObject {\r\n\r\n  /**\r\n   * Constructs a GradingBO object with a given creation_date, grade, passed\r\n   * \r\n   * @param {String} aname - the name of this GradingBO.\r\n   */\r\n  constructor(agrade, aparticipation_id) {\r\n    super();\r\n    this.creation_date = null\r\n    this.grade = agrade\r\n    this.passed = false\r\n    this.participation = aparticipation_id\r\n  }\r\n\r\n  /**\r\n   * Sets a new name\r\n   * \r\n   * @param {String} aname - the new name of this PersonBO.\r\n   */\r\n  setCreationDate(acreation_date) {\r\n    this.creation_date = acreation_date\r\n  }\r\n\r\n  /**\r\n   * Gets the name.\r\n   */\r\n  getCreationDate() {\r\n    return this.getCreationDate\r\n  }\r\n\r\n  setGrade(agrade){\r\n    if (agrade <= 4.0){\r\n      this.setPassed(true)}\r\n    else{\r\n      this.setPassed(false)\r\n    }\r\n\r\n    this.grade = agrade\r\n  }\r\n  \r\n\r\n  getGrade(){\r\n    return this.grade\r\n  }\r\n\r\n  setPassed(apassed){\r\n    this.passed = apassed\r\n  }\r\n  // setPassed(){\r\n  //   if (this.grade <= 4.0) {\r\n  //     this.passed = true\r\n  //   }\r\n  // }\r\n  getPassed(){\r\n    if (this.passed == 1){\r\n      return \"Bestanden\"\r\n    }      \r\n    else {\r\n      return \"Nicht Bestanden\"\r\n    }\r\n  }\r\n\r\n  setParticipation(aparticipation_id) {\r\n    this.participation = aparticipation_id\r\n  }\r\n  \r\n  getParticipation(){\r\n    return this.participation\r\n  }\r\n\r\n\r\n\r\n  /** \r\n   * Returns an Array of GradingBO from a given JSON structure.\r\n   */\r\n  static fromJSON(grading) {\r\n    let result = [];\r\n\r\n    if (Array.isArray(grading)) {\r\n      grading.forEach((p) => {\r\n        Object.setPrototypeOf(p, GradingBO.prototype);\r\n        result.push(p);\r\n      })\r\n    } else {\r\n      // Es handelt sich offenbar um ein singuläres Objekt\r\n      let p = grading;\r\n      Object.setPrototypeOf(p, GradingBO.prototype);\r\n      result.push(p);\r\n    }\r\n\r\n    return result;\r\n  }\r\n}","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\dialogs\\ParticipationForm.js",["194","195"],"import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Button, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, TextField } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { AppApi} from '../../AppApi';\r\nimport ParticipationBO from '../../AppApi/ParticipationBO';\r\n// import AppAPI  from '../../AppApi/AppApi';\r\nimport StudentBO from '../../AppApi/StudentBO';\r\nimport ContextErrorMessage from './ContextErrorMessage';\r\nimport LoadingProgress from './LoadingProgress';\r\n\r\n\r\n\r\n/**\r\n * Shows a modal form dialog for a ParticipationBO in prop participation. If the participation is set, the dialog is configured \r\n * as an edit dialog and the text fields of the form are filled from the given ParticipationBO object. \r\n * If the participation is null, the dialog is configured as a new participation dialog and the textfields are empty.\r\n * In dependency of the edit/new state, the respective backend calls are made to update or create a participation. \r\n * After that, the function of the onClose prop is called with the created/update ParticipationBO object as parameter.  \r\n * When the dialog is canceled, onClose is called with null.\r\n * \r\n * @see See Material-UIs [Dialog](https://material-ui.com/components/dialogs)\r\n * @see See Material-UIs [TextField](https://material-ui.com/components/text-fields//)\r\n * \r\n * @author [Christoph Kunz](https://github.com/christophkunz)\r\n */\r\nclass ParticipationForm extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let m = '';\r\n    if (props.student) {\r\n      m = props.student.matr_nr;\r\n      \r\n    }\r\n\r\n    // Init the state\r\n    this.state = {\r\n      \r\n      matr_nr: m,\r\n      matr_nrValidationFailed: false,\r\n      matr_nrEdited: false,\r\n      addingInProgress: false,\r\n      updatingInProgress: false,\r\n      addingError: null,\r\n      updatingError: null,\r\n      student: ''\r\n    };\r\n    // save this state for canceling\r\n    this.baseState = this.state;\r\n  }\r\n\r\n  getStudentByMatrikelNummer = (matr_nr) => {\r\n    var api = AppApi.getAPI()\r\n    api.getStudentByMatrikelNummer(matr_nr).then(student =>\r\n      this.setState({\r\n        student: student,\r\n        loadingInProgress: false, // loading indicator \r\n        loadingError: null\r\n      })).catch(e =>\r\n        this.setState({ // Reset state with error from catch \r\n          student: null,\r\n          loadingInProgress: false,\r\n          loadingError: e\r\n        })\r\n      );\r\n\r\n    // set loading to true\r\n    this.setState({\r\n      balance: 'loading',\r\n      loadingInProgress: true,\r\n      loadingError: null\r\n    });\r\n  }\r\n\r\n  /** Updates the participation */\r\n  updateParticipation = () => {\r\n    console.log(this.props.participation)\r\n    // clone the original participation, in case the backend call fails\r\n    let updatedParticipation = Object.assign(new ParticipationBO(), this.props.participation);\r\n    \r\n    // set the new attributes from our dialog\r\n    console.log(this.state.student.id)\r\n    updatedParticipation.setStudent(this.state.student.id);//EVTL NUR student.id\r\n    console.log(updatedParticipation)\r\n    \r\n    AppApi.getAPI().updateParticipation(updatedParticipation).then(participation => {\r\n      this.setState({\r\n        updatingInProgress: false,              // disable loading indicator  \r\n        updatingError: null                     // no error message\r\n      });\r\n      // keep the new state as base state\r\n      this.baseState.matr_nr = this.state.matr_nr;\r\n      this.props.onClose(updatedParticipation);      // call the parent with the new participation\r\n    }).catch(e =>\r\n      this.setState({\r\n        updatingInProgress: false,              // disable loading indicator \r\n        updatingError: e                        // show error message\r\n      })\r\n    );\r\n\r\n    // set loading to true\r\n    this.setState({\r\n      updatingInProgress: true,                 // show loading indicator\r\n      updatingError: null                       // disable error message\r\n    });\r\n  }\r\n\r\n  /** Handles value changes of the forms textfields and validates them */\r\n  textFieldValueChange = (event) => {\r\n    const value = event.target.value;\r\n\r\n    // let error = false;\r\n    // if (value.trim().length === 0) {\r\n    //   error = true;\r\n    // }\r\n\r\n    this.setState({\r\n      [event.target.id]: event.target.value,\r\n      // [event.target.id + 'ValidationFailed']: error,\r\n      // [event.target.id + 'Edited']: true\r\n    });\r\n\r\n    if(value.length === 5){\r\n      this.getStudentByMatrikelNummer(event.target.value)\r\n    }\r\n    \r\n  }\r\n\r\n  /** Handles the close / cancel button click event */\r\n  handleClose = () => {\r\n    // Reset the state\r\n    this.setState(this.baseState);\r\n    this.props.onClose(null);\r\n  }\r\n\r\n  /** Renders the component */\r\n  render() {\r\n    const { classes, participation, show } = this.props;\r\n    const { matr_nr, matr_nrValidationFailed, matr_nrEdited, addingInProgress,\r\n      addingError, updatingInProgress, updatingError } = this.state;\r\n\r\n    let title = '';\r\n    let header = '';\r\n\r\n    // if (project) {\r\n    //   // project defindet, so ist an edit dialog\r\n    //   title = 'Update a project';\r\n    //   header = `Project ID: ${project.getID()}`;\r\n    // } else {\r\n    //   title = 'Create a new project';\r\n    //   header = 'Enter project data';\r\n    // }\r\n\r\n    return (\r\n      show ?\r\n        <Dialog open={show} onClose={this.handleClose} maxWidth='xs'>\r\n          <DialogTitle id='form-dialog-title'>{title}\r\n            <IconButton className={classes.closeButton} onClick={this.handleClose}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              {header}\r\n            </DialogContentText>\r\n            <form className={classes.root} noValidate autoComplete='off'>\r\n              <TextField autoFocus type='text' required fullWidth margin='normal' id='matr_nr' label='Matrikelnummer:' value={matr_nr} \r\n                onChange={this.textFieldValueChange} error={matr_nrValidationFailed} \r\n                helperText={matr_nrValidationFailed ? 'The matr_nr must contain at least one character' : ' '} />\r\n\r\n            </form>\r\n            <LoadingProgress show={addingInProgress || updatingInProgress} />\r\n            {\r\n              // Show error message in dependency of participation prop\r\n              // project ?\r\n            <ContextErrorMessage error={updatingError} contextErrorMsg={`The participation ${participation.getID()} could not be updated.`} onReload={this.updateParticipation} />\r\n                // :\r\n                // <ContextErrorMessage error={addingError} contextErrorMsg={`The project could not be added.`} onReload={this.addParticipation} />\r\n            }\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color='secondary'>\r\n              Cancel\r\n            </Button>\r\n            {\r\n              // If a participation is given, show an update button, else an add button\r\n              participation ?\r\n                <Button disabled={matr_nrValidationFailed} variant='contained' onClick={this.updateParticipation} color='primary'>\r\n                  Update\r\n              </Button>\r\n                : <Button disabled={matr_nrValidationFailed || !matr_nrEdited} variant='contained' onClick={this.addProject} color='primary'>\r\n                  Add\r\n             </Button>\r\n            }\r\n          </DialogActions>\r\n        </Dialog>\r\n        : null\r\n    );\r\n  }\r\n}\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\n/** PropTypes */\r\nParticipationForm.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  /** The ParticipationBO to be edited */\r\n  participation: PropTypes.object,\r\n  /** If true, the form is rendered */\r\n  show: PropTypes.bool.isRequired,\r\n  /**  \r\n   * Handler function which is called, when the dialog is closed.\r\n   * Sends the edited or created ParticipationBO as parameter or null, if cancel was pressed.\r\n   *  \r\n   * Signature: onClose(ParticipationBO participation);\r\n   */\r\n  onClose: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(ParticipationForm);\r\n","C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\StudentView.js",[],"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\AdminView\\ReleaseProject.js",["196","197"],"import React, {useState,useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from '@material-ui/core/List';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport {AppApi} from '../../../AppApi';\r\nimport ProjectBO from '../../../AppApi';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 'auto',\r\n  },\r\n  cardHeader: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  list: {\r\n    width: 200,\r\n    height: 230,\r\n    backgroundColor: theme.palette.background.paper,\r\n    overflow: 'auto',\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0.5, 0),\r\n  },\r\n}));\r\n\r\nfunction not(a, b) {\r\n  return a.filter((value) => b.indexOf(value) === -1);\r\n}\r\n\r\nfunction intersection(a, b) {\r\n  return a.filter((value) => b.indexOf(value) !== -1);\r\n}\r\n\r\nfunction union(a, b) {\r\n  return [...a, ...not(b, a)];\r\n}\r\n\r\nexport default function TransferList() {\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = React.useState([]);\r\n  const [left, setLeft] = React.useState([]);\r\n  const [right, setRight] = React.useState([]);\r\n\r\n  const leftChecked = intersection(checked, left);\r\n  const rightChecked = intersection(checked, right);\r\n\r\n  const handleToggle = (value) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  const numberOfChecked = (items) => intersection(checked, items).length;\r\n\r\n  const handleToggleAll = (items) => () => {\r\n    if (numberOfChecked(items) === items.length) {\r\n      setChecked(not(checked, items));\r\n    } else {\r\n      setChecked(union(checked, items));\r\n    }\r\n  };\r\n\r\n  const handleCheckedRight = () => {\r\n    setRight(right.concat(leftChecked));\r\n    setLeft(not(left, leftChecked));\r\n    setChecked(not(checked, leftChecked));\r\n  };\r\n\r\n  const handleCheckedLeft = () => {\r\n    setLeft(left.concat(rightChecked));\r\n    setRight(not(right, rightChecked));\r\n    setChecked(not(checked, rightChecked));\r\n  };\r\n\r\n    /** Fetches all ProjectBOs with State-New from the backend */\r\n  const getProjectsByStateNew = () => {\r\n    // console.log(\"vor fetch\")\r\n      var api = AppApi.getAPI()\r\n      api.getProjectsByStateNew() //evtl. Objekt von API vorher anlegen\r\n        .then(projectBOs => {\r\n          setLeft(projectBOs)});          // Set new state when ProjectBOs have been fetched\r\n            \r\n            // filteredProjects: [...projectBOs], // store a copy\r\n            // loadingInProgress: false,   // disable loading indicator\r\n            // error: null\r\n          // })).catch(e =>\r\n          //   this.setState({             // Reset state with error from catch\r\n          //     left: [],\r\n          //     // loadingInProgress: false, // disable loading indicator\r\n          //     // error: e\r\n          //   })\r\n          // );\r\n  \r\n    //   // set loading to true\r\n    //   this.setState({\r\n    //     loadingInProgress: true,\r\n    //     error: null\r\n    //   });\r\n    };\r\n\r\n  useEffect (() => getProjectsByStateNew());\r\n  // const componentDidMount = () => {\r\n  //   // console.log(\"gerendert\")\r\n  //   this.getProjectsByStateNew();\r\n  // };\r\n\r\n  const customList = (title, items) => (\r\n    <Card>\r\n      <CardHeader\r\n        className={classes.cardHeader}\r\n        avatar={\r\n          <Checkbox\r\n            onClick={handleToggleAll(items)}\r\n            checked={numberOfChecked(items) === items.length && items.length !== 0}\r\n            indeterminate={numberOfChecked(items) !== items.length && numberOfChecked(items) !== 0}\r\n            disabled={items.length === 0}\r\n            inputProps={{ 'aria-label': 'all items selected' }}\r\n          />\r\n        }\r\n        title={title}\r\n        subheader={`${numberOfChecked(items)}/${items.length} selected`}\r\n      />\r\n      <Divider />\r\n      <List className={classes.list} dense component=\"div\" role=\"list\">\r\n        {items.map((value) => { console.log(items, value.name)\r\n          const labelId = `transfer-list-all-item-${value.name}-label`;\r\n\r\n          return (\r\n            <ListItem key={value} role=\"listitem\" button onClick={handleToggle(value)}>\r\n              <ListItemIcon>\r\n                <Checkbox\r\n                  checked={checked.indexOf(value) !== -1}\r\n                  tabIndex={-1}\r\n                  disableRipple\r\n                  inputProps={{ 'aria-labelledby': labelId }}\r\n                />\r\n              </ListItemIcon>\r\n              <ListItemText id={labelId} primary={`List item ${value + 1}`} />\r\n              {/* <ListItemText projectName={value.name} id={labelId} primary={`List item ${value + 1}`} /> */}\r\n              \r\n            </ListItem>\r\n          );\r\n        })}\r\n        <ListItem />\r\n      </List>\r\n    </Card>\r\n  );\r\n\r\n  return (\r\n    <Grid container spacing={2} justify=\"center\" alignItems=\"center\" className={classes.root}>\r\n      <Grid item>{customList('Neue Projekte', left)}</Grid>\r\n      <Grid item>\r\n        <Grid container direction=\"column\" alignItems=\"center\">\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={handleCheckedRight}\r\n            disabled={leftChecked.length === 0}\r\n            aria-label=\"move selected right\"\r\n          >\r\n            &gt;\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            className={classes.button}\r\n            onClick={handleCheckedLeft}\r\n            disabled={rightChecked.length === 0}\r\n            aria-label=\"move selected left\"\r\n          >\r\n            &lt;\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item>{customList('Akzeptierte Projekte', right)}</Grid>\r\n    </Grid>\r\n  );\r\n}\r\n",["198","199"],"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\AdminView\\ProjectListNew.js",["200","201","202"],"C:\\Users\\robin\\OneDrive\\Desktop\\Software-Praktikum\\Project\\SW-Praktikum-Projected\\Prochecked\\frontend\\src\\Components\\pages\\AdminView\\ProjectListEntryNew.js",["203","204","205","206","207","208","209","210"],{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","severity":1,"message":"216","line":3,"column":52,"nodeType":"217","messageId":"218","endLine":3,"endColumn":62},{"ruleId":"215","severity":1,"message":"219","line":9,"column":8,"nodeType":"217","messageId":"218","endLine":9,"endColumn":14},{"ruleId":"215","severity":1,"message":"220","line":12,"column":8,"nodeType":"217","messageId":"218","endLine":12,"endColumn":16},{"ruleId":"215","severity":1,"message":"221","line":157,"column":16,"nodeType":"217","messageId":"218","endLine":157,"endColumn":20},{"ruleId":"215","severity":1,"message":"219","line":2,"column":8,"nodeType":"217","messageId":"218","endLine":2,"endColumn":14},{"ruleId":"222","severity":1,"message":"223","line":370,"column":3,"nodeType":"224","messageId":"225","endLine":380,"endColumn":4},{"ruleId":"222","severity":1,"message":"226","line":383,"column":3,"nodeType":"224","messageId":"225","endLine":392,"endColumn":4},{"ruleId":"222","severity":1,"message":"227","line":394,"column":3,"nodeType":"224","messageId":"225","endLine":403,"endColumn":4},{"ruleId":"215","severity":1,"message":"219","line":6,"column":8,"nodeType":"217","messageId":"218","endLine":6,"endColumn":14},{"ruleId":"228","severity":1,"message":"229","line":11,"column":5,"nodeType":"224","messageId":"230","endLine":13,"endColumn":6},{"ruleId":"228","severity":1,"message":"229","line":11,"column":5,"nodeType":"224","messageId":"230","endLine":13,"endColumn":2},{"ruleId":"215","severity":1,"message":"231","line":17,"column":12,"nodeType":"217","messageId":"218","endLine":17,"endColumn":16},{"ruleId":"215","severity":1,"message":"232","line":8,"column":27,"nodeType":"217","messageId":"218","endLine":8,"endColumn":33},{"ruleId":"215","severity":1,"message":"233","line":8,"column":35,"nodeType":"217","messageId":"218","endLine":8,"endColumn":40},{"ruleId":"215","severity":1,"message":"234","line":8,"column":42,"nodeType":"217","messageId":"218","endLine":8,"endColumn":50},{"ruleId":"215","severity":1,"message":"235","line":9,"column":8,"nodeType":"217","messageId":"218","endLine":9,"endColumn":19},{"ruleId":"215","severity":1,"message":"236","line":10,"column":8,"nodeType":"217","messageId":"218","endLine":10,"endColumn":23},{"ruleId":"215","severity":1,"message":"220","line":11,"column":8,"nodeType":"217","messageId":"218","endLine":11,"endColumn":16},{"ruleId":"215","severity":1,"message":"237","line":12,"column":10,"nodeType":"217","messageId":"218","endLine":12,"endColumn":16},{"ruleId":"215","severity":1,"message":"238","line":31,"column":36,"nodeType":"217","messageId":"218","endLine":31,"endColumn":50},{"ruleId":"215","severity":1,"message":"239","line":2,"column":8,"nodeType":"217","messageId":"218","endLine":2,"endColumn":19},{"ruleId":"215","severity":1,"message":"240","line":3,"column":8,"nodeType":"217","messageId":"218","endLine":3,"endColumn":17},{"ruleId":"215","severity":1,"message":"241","line":4,"column":8,"nodeType":"217","messageId":"218","endLine":4,"endColumn":18},{"ruleId":"215","severity":1,"message":"232","line":6,"column":27,"nodeType":"217","messageId":"218","endLine":6,"endColumn":33},{"ruleId":"228","severity":1,"message":"229","line":11,"column":5,"nodeType":"224","messageId":"230","endLine":13,"endColumn":6},{"ruleId":"215","severity":1,"message":"242","line":3,"column":22,"nodeType":"217","messageId":"218","endLine":3,"endColumn":28},{"ruleId":"215","severity":1,"message":"243","line":4,"column":8,"nodeType":"217","messageId":"218","endLine":4,"endColumn":15},{"ruleId":"215","severity":1,"message":"244","line":10,"column":8,"nodeType":"217","messageId":"218","endLine":10,"endColumn":19},{"ruleId":"215","severity":1,"message":"245","line":166,"column":91,"nodeType":"217","messageId":"218","endLine":166,"endColumn":106},{"ruleId":"215","severity":1,"message":"242","line":4,"column":10,"nodeType":"217","messageId":"218","endLine":4,"endColumn":16},{"ruleId":"215","severity":1,"message":"246","line":4,"column":18,"nodeType":"217","messageId":"218","endLine":4,"endColumn":29},{"ruleId":"215","severity":1,"message":"244","line":6,"column":8,"nodeType":"217","messageId":"218","endLine":6,"endColumn":19},{"ruleId":"215","severity":1,"message":"247","line":7,"column":8,"nodeType":"217","messageId":"218","endLine":7,"endColumn":27},{"ruleId":"215","severity":1,"message":"245","line":95,"column":22,"nodeType":"217","messageId":"218","endLine":95,"endColumn":37},{"ruleId":"215","severity":1,"message":"248","line":95,"column":39,"nodeType":"217","messageId":"218","endLine":95,"endColumn":62},{"ruleId":"215","severity":1,"message":"249","line":1,"column":17,"nodeType":"217","messageId":"218","endLine":1,"endColumn":26},{"ruleId":"215","severity":1,"message":"250","line":8,"column":8,"nodeType":"217","messageId":"218","endLine":8,"endColumn":16},{"ruleId":"215","severity":1,"message":"251","line":15,"column":8,"nodeType":"217","messageId":"218","endLine":15,"endColumn":13},{"ruleId":"215","severity":1,"message":"252","line":18,"column":9,"nodeType":"217","messageId":"218","endLine":18,"endColumn":13},{"ruleId":"215","severity":1,"message":"253","line":39,"column":16,"nodeType":"217","messageId":"218","endLine":39,"endColumn":23},{"ruleId":"215","severity":1,"message":"254","line":50,"column":10,"nodeType":"217","messageId":"218","endLine":50,"endColumn":14},{"ruleId":"215","severity":1,"message":"255","line":50,"column":16,"nodeType":"217","messageId":"218","endLine":50,"endColumn":23},{"ruleId":"215","severity":1,"message":"252","line":3,"column":76,"nodeType":"217","messageId":"218","endLine":3,"endColumn":80},{"ruleId":"215","severity":1,"message":"251","line":3,"column":94,"nodeType":"217","messageId":"218","endLine":3,"endColumn":99},{"ruleId":"215","severity":1,"message":"256","line":5,"column":8,"nodeType":"217","messageId":"218","endLine":5,"endColumn":12},{"ruleId":"215","severity":1,"message":"257","line":7,"column":18,"nodeType":"217","messageId":"218","endLine":7,"endColumn":28},{"ruleId":"258","severity":1,"message":"259","line":145,"column":20,"nodeType":"260","messageId":"225","endLine":145,"endColumn":22},{"ruleId":"215","severity":1,"message":"261","line":207,"column":22,"nodeType":"217","messageId":"218","endLine":207,"endColumn":29},{"ruleId":"215","severity":1,"message":"262","line":1,"column":8,"nodeType":"217","messageId":"218","endLine":1,"endColumn":22},{"ruleId":"258","severity":1,"message":"259","line":62,"column":21,"nodeType":"260","messageId":"225","endLine":62,"endColumn":23},{"ruleId":"215","severity":1,"message":"263","line":8,"column":8,"nodeType":"217","messageId":"218","endLine":8,"endColumn":17},{"ruleId":"215","severity":1,"message":"264","line":142,"column":7,"nodeType":"217","messageId":"218","endLine":142,"endColumn":18},{"ruleId":"215","severity":1,"message":"265","line":1,"column":16,"nodeType":"217","messageId":"218","endLine":1,"endColumn":24},{"ruleId":"215","severity":1,"message":"266","line":14,"column":8,"nodeType":"217","messageId":"218","endLine":14,"endColumn":17},{"ruleId":"211","replacedBy":"267"},{"ruleId":"213","replacedBy":"268"},{"ruleId":"215","severity":1,"message":"242","line":3,"column":22,"nodeType":"217","messageId":"218","endLine":3,"endColumn":28},{"ruleId":"215","severity":1,"message":"243","line":4,"column":8,"nodeType":"217","messageId":"218","endLine":4,"endColumn":15},{"ruleId":"215","severity":1,"message":"245","line":123,"column":91,"nodeType":"217","messageId":"218","endLine":123,"endColumn":106},{"ruleId":"215","severity":1,"message":"246","line":4,"column":18,"nodeType":"217","messageId":"218","endLine":4,"endColumn":29},{"ruleId":"215","severity":1,"message":"269","line":10,"column":8,"nodeType":"217","messageId":"218","endLine":10,"endColumn":22},{"ruleId":"215","severity":1,"message":"270","line":11,"column":8,"nodeType":"217","messageId":"218","endLine":11,"endColumn":12},{"ruleId":"215","severity":1,"message":"271","line":12,"column":8,"nodeType":"217","messageId":"218","endLine":12,"endColumn":16},{"ruleId":"215","severity":1,"message":"245","line":90,"column":22,"nodeType":"217","messageId":"218","endLine":90,"endColumn":37},{"ruleId":"215","severity":1,"message":"248","line":90,"column":39,"nodeType":"217","messageId":"218","endLine":90,"endColumn":62},{"ruleId":"272","severity":1,"message":"273","line":114,"column":85,"nodeType":"260","messageId":"274","endLine":114,"endColumn":86},{"ruleId":"272","severity":1,"message":"273","line":122,"column":89,"nodeType":"260","messageId":"274","endLine":122,"endColumn":90},"no-native-reassign",["275"],"no-negated-in-lhs",["276"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'RoleBO' is defined but never used.","'UserView' is defined but never used.","'name' is assigned a value but never used.","no-dupe-class-members","Duplicate name 'getStudent'.","MethodDefinition","unexpected","Duplicate name 'getStudentByMatrikelNummer'.","Duplicate name 'getPersonByRole'.","no-useless-constructor","Useless constructor.","noUselessConstructor","'user' is assigned a value but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Redirect' is defined but never used.","'ProjectList' is defined but never used.","'ProjektFormular' is defined but never used.","'AppApi' is defined but never used.","'createMuiTheme' is defined but never used.","'StudentView' is defined but never used.","'AdminView' is defined but never used.","'DozentView' is defined but never used.","'Button' is defined but never used.","'AddIcon' is defined but never used.","'ProjectForm' is defined but never used.","'showProjectForm' is assigned a value but never used.","'ButtonGroup' is defined but never used.","'ProjectDeleteDialog' is defined but never used.","'showProjectDeleteDialog' is assigned a value but never used.","'useEffect' is defined but never used.","'Checkbox' is defined but never used.","'Input' is defined but never used.","'Link' is defined but never used.","'setRaum' is assigned a value but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'Icon' is defined but never used.","'RouterLink' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'project' is assigned a value but never used.","'BusinessObject' is defined but never used.","'StudentBO' is defined but never used.","'addingError' is assigned a value but never used.","'useState' is defined but never used.","'ProjectBO' is defined but never used.",["275"],["276"],"'ExpandMoreIcon' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-global-assign","no-unsafe-negation"]